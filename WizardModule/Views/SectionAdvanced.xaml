<UserControl
	x:Class="WizardModule.Views.SectionAdvanced" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:p="clr-namespace:WizardModule.Properties" xmlns:local="clr-namespace:WizardModule.Views" xmlns:converters="clr-namespace:Laplink.Tools.Ui.Converters;assembly=Laplink.Tools.Ui.Converters" xmlns:popups="clr-namespace:Laplink.Tools.Popups;assembly=Laplink.Tools.Popups"
	Name="root">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<converters:BoolToVisibilityConverter
				x:Key="VisibilityConverter" />
			<converters:ReverseBoolToVisibilityConverter
				x:Key="ReverseVisibilityConverter" />
			<converters:ReverseBooleanConverter
				x:Key="ReverseBoolConverter" />
			<converters:BoolToStringConverter
				FalseValue="{x:Static p:Resources.NO}"
				TrueValue="{x:Static p:Resources.YES}"
				x:Key="BooleanToStringConverter" />
			<local:ResourceAppNameConverter
				x:Key="AppNameConverter" />
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<Border
		BorderBrush="{StaticResource SubtleLineBrush}"
		Margin="24,12"
		BorderThickness="2"
		CornerRadius="12"
		Padding="8,12"
		Background="#FFFFFFFF"
		MaxWidth="640"
		MaxHeight="500">
		<ScrollViewer>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition
						Height="Auto" />
					<RowDefinition
						Height="*" />
				</Grid.RowDefinitions>
				<popups:AppPopup
					Placement="Center"
					Width="512"
					PopupAnimation="Scroll"
					AllowsTransparency="True"
					StaysOpen="True"
					IsOpen="{Binding IsDrivePopupOpen, Mode=TwoWay}">
					<Border
						BorderThickness="1,1,2,3"
						BorderBrush="#FF000000"
						Background="#FFF5F4F4"
						Width="500">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition
									Height="Auto" />
								<RowDefinition
									Height="Auto" />
								<RowDefinition
									Height="30" />
								<RowDefinition
									Height="Auto" />
								<RowDefinition
									Height="Auto" />
							</Grid.RowDefinitions>
							<StackPanel
								Orientation="Horizontal"
								Margin="32,32,32,12">
								<TextBlock
									Style="{StaticResource StandardTextStyle}"
									Text="{x:Static p:Resources.SAdv_NewDestination}"
									Margin="0,0,4,0" />
								<TextBlock
									Style="{StaticResource StandardTextStyle}"
									Text="{Binding OldDriveLocation}" />
							</StackPanel>
							<TextBox
								Grid.Row="1"
								Margin="32,0"
								Text="{Binding NewDriveLocation, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								IsEnabled="{Binding IsChecked, ElementName=checkDriveExcluded, Converter={StaticResource ReverseBoolConverter}, Mode=OneWay}" />
							<TextBlock
								Grid.Row="2"
								Style="{StaticResource StandardTextStyle}"
								Foreground="#FFFF0000"
								HorizontalAlignment="Center"
								Text="{x:Static p:Resources.SAdv_EnterValidPath}"
								Visibility="{Binding IsNewPathValid, Converter={StaticResource ReverseVisibilityConverter}, Mode=OneWay}" />
							<CheckBox
								Name="checkDriveExcluded"
								Grid.Row="3"
								Margin="32,0"
								IsChecked="{Binding IsDriveExcluded, Mode=TwoWay}">
								<TextBlock
									Text="{x:Static p:Resources.SAdv_DontTransferDrive}"
									Style="{StaticResource StandardTextStyle}" />
							</CheckBox>
							<StackPanel
								Grid.Row="4"
								Orientation="Horizontal"
								HorizontalAlignment="Center"
								Margin="24,4,24,0">
								<Button
									Style="{StaticResource RoundedButton}"
									Content="{x:Static p:Resources.SAVE}"
									Width="160"
									Margin="24"
									Command="{Binding OnDriveMappingChanged}" />
								<Button
									Style="{StaticResource RoundedButton}"
									Content="{x:Static p:Resources.CANCEL}"
									Width="160"
									Margin="24"
									Command="{Binding OnDriveMappingCanceled}" />
							</StackPanel>
						</Grid>
					</Border>
				</popups:AppPopup>
				<StackPanel
					Orientation="Vertical"
					Margin="20,20,0,0">
					<TextBlock
						Style="{StaticResource MediumTextDark}"
						Text="{x:Static p:Resources.SAdv_Drives}" />
					<TextBlock
						Style="{StaticResource SmallTextMedium}"
						Text="{x:Static p:Resources.SAdv_MoreDrives}"
						Margin="0,10,0,0"
						Visibility="{Binding DriveCountMismatch, Converter={StaticResource VisibilityConverter}, Mode=OneWay}" />
					<StackPanel
						Orientation="Horizontal"
						Margin="24,10,0,8"
						Visibility="{Binding IsDriveMappingIncludeExclude, Converter={StaticResource ReverseVisibilityConverter}, Mode=OneWay}">
						<TextBlock
							Style="{StaticResource SmallTextDark}"
							Text="{x:Static p:Resources.SAdv_OldDrives}"
							FontWeight="Bold"
							Width="160" />
						<TextBlock
							Style="{StaticResource SmallTextDark}"
							Text="{x:Static p:Resources.SAdv_Destination}"
							FontWeight="Bold"
							Width="200" />
					</StackPanel>
					<ListView
						ItemsSource="{Binding DriveMapping}"
						BorderBrush="{x:Null}"
						Visibility="{Binding IsDriveMappingIncludeExclude, Converter={StaticResource ReverseVisibilityConverter}, Mode=OneWay}"
						IsEnabled="{Binding IsDriveMappingEnabled, Mode=OneWay}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<StackPanel
									Orientation="Horizontal"
									Margin="24,0,0,0">
									<TextBlock
										Style="{StaticResource SmallTextDark}"
										Width="160"
										VerticalAlignment="Center"
										Text="{Binding OldDrive, Mode=OneWay}" />
									<TextBlock
										Style="{StaticResource SmallTextDark}"
										Width="200"
										VerticalAlignment="Center"
										Text="{Binding NewDrive, Mode=OneWay}" />
									<StackPanel
										Visibility="{Binding ShowChange, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
										<TextBlock
											FontSize="8"
											VerticalAlignment="Center">
											<Hyperlink
												Style="{StaticResource HyperlinkTextStyle}"
												Command="{Binding ElementName=root, Path=DataContext.OnDriveMappingChanging}"
												CommandParameter="{Binding OldDrive}">
												<TextBlock
													Text="{x:Static p:Resources.SAdv_ChangeFolder}" />
											</Hyperlink>
										</TextBlock>
									</StackPanel>
								</StackPanel>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ListView>
					<ListView
						ItemsSource="{Binding DriveMapping}"
						BorderBrush="{x:Null}"
						Visibility="{Binding IsDriveMappingIncludeExclude, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"
						IsEnabled="{Binding IsDriveMappingEnabled, Mode=OneWay}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<CheckBox
									IsChecked="{Binding Selected, Mode=TwoWay}"
									Command="{Binding ElementName=root, Path=DataContext.OnFilesBasedDriveSelectionChanged}"
									CommandParameter="{Binding OldDrive}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition
												Width="Auto" />
											<ColumnDefinition
												Width="*" />
										</Grid.ColumnDefinitions>
										<TextBlock
											Style="{StaticResource SmallTextDark}"
											VerticalAlignment="Center"
											Text="{Binding OldDrive, Mode=OneWay}" />
										<TextBlock
											Grid.Column="1"
											Style="{StaticResource SmallTextDark}"
											VerticalAlignment="Center"
											HorizontalAlignment="Left"
											Margin="24,0,0,0"
											Text="{Binding DriveIncludedText, Mode=OneWay}" />
									</Grid>
								</CheckBox>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ListView>
					<StackPanel
						Orientation="Vertical"
						Margin="0,10,0,0"
						Visibility="{Binding HideSettings, Converter={StaticResource ReverseVisibilityConverter}, Mode=OneWay}">
						<TextBlock
							Style="{StaticResource MediumTextDark}"
							Text="{x:Static p:Resources.SAdv_Filtering}" />
						<StackPanel
							Orientation="Horizontal"
							Margin="24,0,0,0"
							Visibility="{Binding ElementName=root, Path=DataContext.IsReadOnly, Converter={StaticResource ReverseVisibilityConverter}, Mode=OneWay}">
							<Button
								Content="{x:Static p:Resources.SAdv_FileFilters}"
								Style="{StaticResource RoundedButtonSmall}"
								Margin="8,10"
								Command="{Binding OnFileFilter}" />
						</StackPanel>
						<ScrollViewer
							Margin="0,8,0,0"
							MaxHeight="300"
							Visibility="{Binding ElementName=root, Path=DataContext.IsReadOnly, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
							<StackPanel
								Orientation="Vertical">
								<StackPanel
									Orientation="Horizontal"
									Margin="24,0,0,0">
									<TextBlock
										Style="{StaticResource SmallTextDark}"
										Text="{x:Static p:Resources.SAdv_FileSpec}"
										FontWeight="Bold"
										Width="160" />
									<TextBlock
										Style="{StaticResource SmallTextDark}"
										Text="{x:Static p:Resources.SAdv_Transfer}"
										FontWeight="Bold"
										Width="100" />
									<TextBlock
										Style="{StaticResource SmallTextDark}"
										Text="{x:Static p:Resources.SAdv_Target}"
										FontWeight="Bold" />
								</StackPanel>
								<ListView
									ItemsSource="{Binding FileFilters}"
									BorderBrush="{x:Null}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<StackPanel
												Orientation="Horizontal"
												Margin="24,0,0,0">
												<TextBlock
													Style="{StaticResource SmallTextDark}"
													Width="160"
													VerticalAlignment="Center"
													Text="{Binding filter, Mode=OneWay}" />
												<TextBlock
													Style="{StaticResource SmallTextDark}"
													Width="100"
													Text="{Binding transfer, Converter={StaticResource BooleanToStringConverter}, Mode=OneWay}" />
												<TextBlock
													Style="{StaticResource SmallTextDark}"
													VerticalAlignment="Center"
													Text="{Binding target, Mode=OneWay}" />
											</StackPanel>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ListView>
							</StackPanel>
						</ScrollViewer>
					</StackPanel>
					<TextBlock
						Style="{StaticResource MediumTextDark}"
						Text="{x:Static p:Resources.SAdv_Preferences}"
						Margin="0,10,0,4"
						Visibility="{Binding HideSettings, Converter={StaticResource ReverseVisibilityConverter}, Mode=OneWay}" />
					<TabControl
						BorderBrush="#FF000000"
						BorderThickness="1"
						ItemsSource="{Binding MiscSettingsGroups}"
						Visibility="{Binding HideSettings, Converter={StaticResource ReverseVisibilityConverter}, Mode=OneWay}"
						IsEnabled="{Binding IsMigModEnabled, Mode=OneWay}">
						<ItemsControl.ItemContainerStyle>
							<Style
								TargetType="{x:Type TabItem}">
								<Setter
									Property="Header"
									Value="{Binding DisplayName}" />
								<Setter
									Property="FontSize"
									Value="14" />
								<Setter
									Property="Template">
									<Setter.Value>
										<ControlTemplate
											TargetType="{x:Type TabItem}">
											<Border
												Name="Border"
												BorderThickness="1,1,1,0"
												BorderBrush="#FF000000"
												CornerRadius="4,4,0,0"
												Margin="2,0">
												<ContentPresenter
													VerticalAlignment="Center"
													HorizontalAlignment="Center"
													ContentSource="Header"
													Margin="8,2" />
											</Border>
											<ControlTemplate.Triggers>
												<Trigger
													Property="TabItem.IsSelected"
													Value="True">
													<Setter
														TargetName="Border"
														Property="Background">
														<Setter.Value>
															<SolidColorBrush
																Color="White" />
														</Setter.Value>
													</Setter>
													<Setter
														Property="FontWeight"
														Value="Bold" />
												</Trigger>
												<Trigger
													Property="TabItem.IsSelected"
													Value="False">
													<Setter
														TargetName="Border"
														Property="Background">
														<Setter.Value>
															<SolidColorBrush
																Color="{DynamicResource SystemColors.ControlLightColorKey}" />
														</Setter.Value>
													</Setter>
												</Trigger>
												<Trigger
													Property="UIElement.IsMouseOver"
													Value="True">
													<Setter
														TargetName="Border"
														Property="Background">
														<Setter.Value>
															<SolidColorBrush
																Color="{StaticResource MainThemeColor2}" />
														</Setter.Value>
													</Setter>
												</Trigger>
												<MultiTrigger>
													<MultiTrigger.Conditions>
														<Condition
															Property="Selector.IsSelected"
															Value="True" />
														<Condition
															Value="{x:Static Dock.Top}"
															Property="TabItem.TabStripPlacement" />
													</MultiTrigger.Conditions>
													<Setter
														Property="Margin">
														<Setter.Value>
															<Thickness>-2,-2,-2,-1</Thickness>
														</Setter.Value>
													</Setter>
												</MultiTrigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</ItemsControl.ItemContainerStyle>
						<TabControl.ContentTemplate>
							<DataTemplate>
								<ListView
									Name="listView"
									BorderThickness="0"
									ItemsSource="{Binding Settings}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<CheckBox
												Margin="0,0,16,4"
												IsChecked="{Binding Selected, Mode=TwoWay, NotifyOnTargetUpdated=True}"
												Command="{Binding Path=DataContext.OnChangeMiscSettings, RelativeSource={RelativeSource AncestorType=TabControl}}"
												CommandParameter="{Binding}">
												<StackPanel
													Orientation="Horizontal">
													<TextBlock
														Style="{StaticResource SmallTextDark}"
														Text="{Binding Text, Mode=OneWay}">
														<FrameworkElement.ToolTip>
															<TextBlock
																Style="{StaticResource SmallTextMedium}"
																MaxWidth="360"
																Text="{Binding Help, Converter={StaticResource AppNameConverter}, Mode=OneWay}" />
														</FrameworkElement.ToolTip>
													</TextBlock>
												</StackPanel>
											</CheckBox>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ListView>
							</DataTemplate>
						</TabControl.ContentTemplate>
					</TabControl>
				</StackPanel>
			</Grid>
		</ScrollViewer>
	</Border>
</UserControl>
