<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:ThankYou">
	<Color
		x:Key="BackgroundColor">#F2F2F2</Color>
	<Color
		x:Key="MainThemeColor1">#414141</Color>
	<Color
		x:Key="MainThemeColor2">#F5982A</Color>
	<Color
		x:Key="MainThemeColor3">#00879D</Color>
	<Color
		x:Key="ErrorColor">#D95B27</Color>
	<Color
		x:Key="AlternateTextColor">#F5982A</Color>
	<Color
		x:Key="DarkTextColor">#1A1F1D</Color>
	<Color
		x:Key="MediumTextColor">#595A5C</Color>
	<Color
		x:Key="LightTextColor">#D9D9D9</Color>
	<Color
		x:Key="VeryLightTextColor">#F4F4F4</Color>
	<Color
		x:Key="SubtleLineColor">#E2E2E2</Color>
	<Color
		x:Key="ButtonTextColor">#FFFFFF</Color>
	<Color
		x:Key="GrayoutAlternateTextColor">#FFEBCBA4</Color>
	<Color
		x:Key="Gray5">#FFB9B9B9</Color>
	<Color
		x:Key="IdealForegroundColor">White</Color>
	<SolidColorBrush
		Color="{StaticResource IdealForegroundColor}"
		x:Key="AccentSelectedColorBrush" />
	<SolidColorBrush
		Color="{StaticResource BackgroundColor}"
		x:Key="BackgroundColorBrush" />
	<SolidColorBrush
		Color="{StaticResource MainThemeColor1}"
		x:Key="MainThemeBrush1" />
	<SolidColorBrush
		Color="{StaticResource MainThemeColor2}"
		x:Key="MainThemeBrush2" />
	<SolidColorBrush
		Color="{StaticResource MainThemeColor3}"
		x:Key="MainThemeBrush3" />
	<SolidColorBrush
		Color="{StaticResource ErrorColor}"
		x:Key="ErrorBrush" />
	<SolidColorBrush
		Color="{StaticResource AlternateTextColor}"
		x:Key="AlternateTextBrush" />
	<SolidColorBrush
		Color="{StaticResource MediumTextColor}"
		x:Key="MediumTextBrush" />
	<SolidColorBrush
		Color="{StaticResource DarkTextColor}"
		x:Key="DarkTextBrush" />
	<SolidColorBrush
		Color="{StaticResource LightTextColor}"
		x:Key="LightTextBrush" />
	<SolidColorBrush
		Color="{StaticResource VeryLightTextColor}"
		x:Key="VeryLightTextBrush" />
	<SolidColorBrush
		Color="{StaticResource SubtleLineColor}"
		x:Key="SubtleLineBrush" />
	<SolidColorBrush
		Color="{StaticResource GrayoutAlternateTextColor}"
		x:Key="GrayoutAlternateTextBrush" />
	<SolidColorBrush
		Color="{StaticResource ButtonTextColor}"
		x:Key="ButtonTextBrush" />
	<SolidColorBrush
		Color="{StaticResource ButtonTextColor}"
		x:Key="TabControlNormalBorderBrush" />
	<SolidColorBrush
		Color="{StaticResource Gray5}"
		x:Key="GrayNormalBrush" />
	<Style
		TargetType="{x:Type TextBlock}"
		x:Key="TitleStyle">
		<Setter
			Property="FontSize"
			Value="22" />
		<Setter
			Property="HorizontalAlignment"
			Value="Center" />
		<Setter
			Property="VerticalAlignment"
			Value="Top" />
		<Setter
			Property="Margin"
			Value="0,0,0,12" />
		<Setter
			Property="Foreground"
			Value="{StaticResource MediumTextBrush}" />
	</Style>
	<Style
		TargetType="{x:Type TextBlock}"
		x:Key="TitleTextStyle">
		<Setter
			Property="FontSize"
			Value="20" />
		<Setter
			Property="FontFamily"
			Value="Segoe UI Semilight" />
		<Setter
			Property="TextWrapping"
			Value="NoWrap" />
		<Setter
			Property="VerticalAlignment"
			Value="Center" />
		<Setter
			Property="Foreground"
			Value="{StaticResource MediumTextBrush}" />
		<Setter
			Property="UIElement.Opacity"
			Value="0.85" />
		<Setter
			Property="Width"
			Value="600" />
		<Setter
			Property="TextBlock.TextAlignment"
			Value="Left" />
		<Setter
			Property="HorizontalAlignment"
			Value="Left" />
		<Setter
			Property="Margin"
			Value="20,0" />
	</Style>
	<Style
		TargetType="{x:Type TextBlock}"
		x:Key="LargeTextDark">
		<Setter
			Property="FontSize"
			Value="20" />
		<Setter
			Property="FontFamily"
			Value="Segoe UI Semilight" />
		<Setter
			Property="TextWrapping"
			Value="Wrap" />
		<Setter
			Property="Foreground"
			Value="{StaticResource DarkTextBrush}" />
	</Style>
	<Style
		TargetType="{x:Type TextBlock}"
		x:Key="MediumTextDark">
		<Setter
			Property="FontSize"
			Value="16" />
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="TextWrapping"
			Value="Wrap" />
		<Setter
			Property="Foreground"
			Value="{StaticResource DarkTextBrush}" />
	</Style>
	<Style
		TargetType="{x:Type TextBlock}"
		x:Key="MediumTextMedium">
		<Setter
			Property="FontSize"
			Value="16" />
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="TextWrapping"
			Value="Wrap" />
		<Setter
			Property="Foreground"
			Value="{StaticResource MediumTextBrush}" />
	</Style>
	<Style
		TargetType="{x:Type TextBlock}"
		x:Key="MediumTextLight">
		<Setter
			Property="FontSize"
			Value="16" />
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="TextWrapping"
			Value="Wrap" />
		<Setter
			Property="Foreground"
			Value="{StaticResource LightTextBrush}" />
	</Style>
	<Style
		TargetType="{x:Type TextBlock}"
		x:Key="MediumTextError">
		<Setter
			Property="FontSize"
			Value="16" />
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="TextWrapping"
			Value="Wrap" />
		<Setter
			Property="Foreground"
			Value="{StaticResource ErrorBrush}" />
	</Style>
	<Style
		TargetType="{x:Type TextBlock}"
		x:Key="SmallTextDark">
		<Setter
			Property="FontSize"
			Value="12" />
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="TextWrapping"
			Value="Wrap" />
		<Setter
			Property="Foreground"
			Value="{StaticResource DarkTextBrush}" />
	</Style>
	<Style
		TargetType="{x:Type TextBlock}"
		x:Key="SmallTextMedium">
		<Setter
			Property="FontSize"
			Value="12" />
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="TextWrapping"
			Value="Wrap" />
		<Setter
			Property="Foreground"
			Value="{StaticResource MediumTextBrush}" />
	</Style>
	<Style
		TargetType="{x:Type Hyperlink}"
		x:Key="MediumHyperlinkTextStyle">
		<Setter
			Property="FontSize"
			Value="18" />
		<Setter
			Property="TextDecorations"
			Value="{x:Null}" />
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="Foreground"
			Value="{StaticResource AlternateTextBrush}" />
		<Style.Triggers>
			<Trigger
				Property="ContentElement.IsMouseOver"
				Value="True">
				<Setter
					Property="TextDecorations"
					Value="Underline" />
			</Trigger>
			<Trigger
				Property="ContentElement.IsEnabled"
				Value="False">
				<Setter
					Property="Foreground"
					Value="{StaticResource GrayoutAlternateTextBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style
		TargetType="{x:Type Hyperlink}"
		x:Key="FooterHyperlinkTextStyle">
		<Setter
			Property="FontSize"
			Value="14" />
		<Setter
			Property="TextDecorations"
			Value="{x:Null}" />
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="Foreground"
			Value="{StaticResource AlternateTextBrush}" />
		<Style.Triggers>
			<Trigger
				Property="ContentElement.IsMouseOver"
				Value="True">
				<Setter
					Property="TextDecorations"
					Value="Underline" />
			</Trigger>
			<Trigger
				Property="ContentElement.IsEnabled"
				Value="False">
				<Setter
					Property="Foreground"
					Value="{StaticResource GrayoutAlternateTextBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style
		TargetType="{x:Type TextBlock}"
		x:Key="FooterStyle">
		<Setter
			Property="FontSize"
			Value="14" />
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="TextWrapping"
			Value="Wrap" />
		<Setter
			Property="VerticalAlignment"
			Value="Center" />
		<Setter
			Property="Foreground"
			Value="{StaticResource VeryLightTextBrush}" />
	</Style>
	<Style
		TargetType="{x:Type CheckBox}"
		x:Key="FooterCheckboxStyle">
		<Setter
			Property="FontSize"
			Value="14" />
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="Foreground"
			Value="{StaticResource VeryLightTextBrush}" />
	</Style>
	<Style
		TargetType="{x:Type Button}"
		x:Key="RoundedButton">
		<Setter
			Property="HorizontalContentAlignment"
			Value="Center" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
		<Setter
			Property="Padding"
			Value="12,4" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Button}">
					<FrameworkTemplate.Resources>
						<ResourceDictionary>
							<Storyboard
								x:Key="ButtonDownAnimation">
								<DoubleAnimation
									Storyboard.TargetName="text"
									Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
									To="1"
									Duration="0:0:0.05" />
							</Storyboard>
							<Storyboard
								x:Key="ButtonUpAnimation">
								<DoubleAnimation
									Storyboard.TargetName="text"
									Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
									To="0"
									Duration="0:0:0.05" />
							</Storyboard>
						</ResourceDictionary>
					</FrameworkTemplate.Resources>
					<Border
						Name="border"
						CornerRadius="2"
						BorderThickness="1"
						MinWidth="120"
						MinHeight="42"
						BorderBrush="{StaticResource MainThemeBrush2}"
						Background="{StaticResource MainThemeBrush2}">
						<TextBlock
							Name="text"
							FontFamily="Segoe UI"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Foreground="#FFFFFFFF"
							FontWeight="Bold"
							FontSize="16"
							TextWrapping="WrapWithOverflow"
							Text="{TemplateBinding Content}"
							Padding="8,0">
							<UIElement.RenderTransform>
								<TranslateTransform />
							</UIElement.RenderTransform>
						</TextBlock>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger
							Property="IsPressed"
							Value="True">
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource ButtonDownAnimation}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource ButtonUpAnimation}" />
							</TriggerBase.ExitActions>
						</Trigger>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="border"
								Property="BorderBrush"
								Value="#FF616161" />
							<Setter
								TargetName="border"
								Property="Background"
								Value="#FFD07407" />
							<Setter
								Property="FrameworkElement.Cursor"
								Value="Hand" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								TargetName="border"
								Property="BorderBrush"
								Value="#FFC4C4C3" />
							<Setter
								TargetName="border"
								Property="Background"
								Value="#FFC4C4C3" />
							<Setter
								TargetName="border"
								Property="UIElement.Effect"
								Value="{x:Null}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		TargetType="{x:Type Button}"
		x:Key="ImageButton">
		<Setter
			Property="FrameworkElement.OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="Margin"
			Value="0" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Button}">
					<Border
						Name="border"
						BorderThickness="0"
						Padding="0"
						CornerRadius="0"
						BorderBrush="{x:Null}"
						Background="{x:Null}">
						<ContentPresenter
							HorizontalAlignment="Center"
							VerticalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="border"
								Property="BorderBrush"
								Value="{x:Null}" />
							<Setter
								Property="FrameworkElement.Cursor"
								Value="Hand" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
