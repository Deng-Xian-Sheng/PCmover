<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls">
	<ControlTemplate
		TargetType="{x:Type Controls:DropDownButton}"
		x:Key="SplitButtonHorizontal">
		<Border
			Name="PART_Border"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
			SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
			<Button
				Name="PART_Button"
				Background="{TemplateBinding Background}"
				Command="{TemplateBinding Controls:Command}"
				CommandParameter="{TemplateBinding Controls:CommandParameter}"
				CommandTarget="{TemplateBinding Controls:CommandTarget}"
				Foreground="{TemplateBinding Foreground}"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
				Style="{TemplateBinding Controls:ButtonStyle}">
				<StackPanel
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					Orientation="Horizontal">
					<ContentPresenter
						Content="{TemplateBinding Controls:Icon}"
						RecognizesAccessKey="True" />
					<ContentControl
						Name="PART_ButtonContent"
						MinWidth="20"
						Margin="3"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						ContentStringFormat="{TemplateBinding Controls:ContentStringFormat}"
						ContentTemplate="{TemplateBinding Controls:ContentTemplate}"
						ContentTemplateSelector="{TemplateBinding Controls:ContentTemplateSelector}"
						Content="{Binding Content, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
					<Rectangle
						Name="PART_Rectangle"
						Width="10"
						Height="6"
						Margin="0 0 3 0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Fill="{TemplateBinding Controls:ArrowBrush}">
						<UIElement.OpacityMask>
							<VisualBrush
								Stretch="Fill">
								<VisualBrush.Visual>
									<Canvas
										Width="18"
										Height="18"
										Clip="F1 M0,0 L48,0 L48,48 L0,48 L0,0"
										UseLayoutRounding="False">
										<Path
											Canvas.Left="14.9063"
											Canvas.Top="15.75"
											Width="18"
											Height="16"
											Data="F1 M23.9063,25 L25.9063,23 L32.9063,15.75 L32.9063,22.25 L23.9062,31.75 L14.9063,22.25 L14.9063,15.75 L21.9063,23 L23.9063,25"
											Fill="{DynamicResource BlackColorBrush}"
											Stretch="Fill" />
									</Canvas>
								</VisualBrush.Visual>
							</VisualBrush>
						</UIElement.OpacityMask>
					</Rectangle>
				</StackPanel>
				<FrameworkElement.ContextMenu>
					<ContextMenu
						Name="PART_Menu"
						MinWidth="{TemplateBinding ActualWidth}"
						DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
						ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
						ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
						ItemStringFormat="{TemplateBinding ItemStringFormat}"
						ItemTemplate="{TemplateBinding ItemTemplate}"
						ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
						ItemsSource="{TemplateBinding ItemsSource}"
						Placement="Bottom"
						StaysOpen="False"
						UseLayoutRounding="False"
						IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
				</FrameworkElement.ContextMenu>
			</Button>
		</Border>
	</ControlTemplate>
	<ControlTemplate
		TargetType="{x:Type Controls:DropDownButton}"
		x:Key="SplitButtonVertical">
		<Border
			Name="PART_Border"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
			SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
			<Button
				Name="PART_Button"
				Width="{TemplateBinding Width}"
				Background="{TemplateBinding Background}"
				Command="{TemplateBinding Controls:Command}"
				CommandParameter="{TemplateBinding Controls:CommandParameter}"
				CommandTarget="{TemplateBinding Controls:CommandTarget}"
				Foreground="{TemplateBinding Foreground}"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
				Style="{TemplateBinding Controls:ButtonStyle}">
				<StackPanel
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					Orientation="Vertical">
					<ContentPresenter
						Content="{TemplateBinding Controls:Icon}"
						RecognizesAccessKey="True" />
					<ContentControl
						Name="PART_ButtonContent"
						MinHeight="20"
						Margin="3"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						VerticalAlignment="Stretch"
						VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
						ContentStringFormat="{TemplateBinding Controls:ContentStringFormat}"
						ContentTemplate="{TemplateBinding Controls:ContentTemplate}"
						ContentTemplateSelector="{TemplateBinding Controls:ContentTemplateSelector}"
						Content="{Binding Content, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
					<Rectangle
						Name="PART_Rectangle"
						Width="10"
						Height="6"
						Margin="0 0 0 3"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Fill="{TemplateBinding Controls:ArrowBrush}">
						<UIElement.OpacityMask>
							<VisualBrush
								Stretch="Fill">
								<VisualBrush.Visual>
									<Canvas
										Width="18"
										Height="18"
										Clip="F1 M0,0 L48,0 L48,48 L0,48 L0,0"
										UseLayoutRounding="False">
										<Path
											Canvas.Left="14.9063"
											Canvas.Top="15.75"
											Width="18"
											Height="16"
											Data="F1 M23.9063,25 L25.9063,23 L32.9063,15.75 L32.9063,22.25 L23.9062,31.75 L14.9063,22.25 L14.9063,15.75 L21.9063,23 L23.9063,25"
											Fill="{DynamicResource BlackColorBrush}"
											Stretch="Fill" />
									</Canvas>
								</VisualBrush.Visual>
							</VisualBrush>
						</UIElement.OpacityMask>
					</Rectangle>
				</StackPanel>
				<FrameworkElement.ContextMenu>
					<ContextMenu
						Name="PART_Menu"
						MinWidth="{TemplateBinding ActualWidth}"
						DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
						ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
						ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
						ItemStringFormat="{TemplateBinding ItemStringFormat}"
						ItemTemplate="{TemplateBinding ItemTemplate}"
						ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
						ItemsSource="{TemplateBinding ItemsSource}"
						Placement="Bottom"
						StaysOpen="False"
						UseLayoutRounding="False"
						IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
				</FrameworkElement.ContextMenu>
			</Button>
		</Border>
	</ControlTemplate>
	<Style
		x:Key="ButtonDropDownFocusVisual">
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle
						Margin="1"
						SnapsToDevicePixels="True"
						Stroke="{DynamicResource SystemColors.ControlTextBrushKey}"
						StrokeDashArray="1 2"
						StrokeThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		TargetType="{x:Type Controls:DropDownButton}"
		x:Key="{x:Type Controls:DropDownButton}">
		<Setter
			Property="Controls:DropDownButton.ArrowBrush"
			Value="{DynamicResource BlackColorBrush}" />
		<Setter
			Property="Controls:DropDownButton.ArrowMouseOverBrush"
			Value="{DynamicResource AccentColorBrush}" />
		<Setter
			Property="Controls:DropDownButton.ArrowPressedBrush"
			Value="{DynamicResource BlackColorBrush}" />
		<Setter
			Property="Background"
			Value="{DynamicResource WhiteColorBrush}" />
		<Setter
			Property="BorderBrush"
			Value="{DynamicResource BlackColorBrush}" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="Controls:DropDownButton.ButtonStyle"
			Value="{DynamicResource ButtonDropDownStyle}" />
		<Setter
			Property="FrameworkElement.FocusVisualStyle"
			Value="{StaticResource ButtonDropDownFocusVisual}" />
		<Setter
			Property="Focusable"
			Value="False" />
		<Setter
			Property="FontFamily"
			Value="{DynamicResource ContentFontFamily}" />
		<Setter
			Property="FontSize"
			Value="{DynamicResource ContentFontSize}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource BlackColorBrush}" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Center" />
		<Setter
			Property="Controls:DropDownButton.MenuStyle"
			Value="{DynamicResource MetroContextMenu}" />
		<Setter
			Property="MinHeight"
			Value="26" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Controls:DropDownButton}">
					<Border
						Name="PART_Border"
						Background="#00FFFFFF"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding Controls:CornerRadius}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						UseLayoutRounding="True">
						<Controls:ClipBorder
							Name="PART_ClipBorder"
							CornerRadius="{TemplateBinding CornerRadius}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Button
								Name="PART_Button"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								HorizontalContentAlignment="Stretch"
								VerticalContentAlignment="Stretch"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								Command="{TemplateBinding Controls:Command}"
								CommandParameter="{TemplateBinding Controls:CommandParameter}"
								CommandTarget="{TemplateBinding Controls:CommandTarget}"
								FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
								Foreground="{TemplateBinding Foreground}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								Style="{TemplateBinding Controls:ButtonStyle}"
								RenderOptions.ClearTypeHint="{Binding Path=(RenderOptions.ClearTypeHint), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
								<DockPanel
									Name="PART_Content"
									Focusable="False"
									LastChildFill="True">
									<ContentControl
										Name="PART_Arrow"
										Width="9"
										Height="9"
										Margin="0 0 3 0"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Content="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
										DockPanel.Dock="Right"
										Foreground="{TemplateBinding Controls:ArrowBrush}"
										Style="{DynamicResource PathIconContentControlStyle}"
										Visibility="{TemplateBinding Controls:ArrowVisibility}" />
									<StackPanel
										Name="PART_ContentOrientation"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										Focusable="False"
										Orientation="Horizontal">
										<ContentPresenter
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Content="{TemplateBinding Controls:Icon}"
											ContentTemplate="{TemplateBinding Controls:IconTemplate}"
											Focusable="False"
											RecognizesAccessKey="True"
											UseLayoutRounding="False" />
										<Controls:ContentControlEx
											Name="PART_ButtonContent"
											Margin="3"
											Padding="{TemplateBinding Padding}"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											ContentStringFormat="{TemplateBinding ContentStringFormat}"
											ContentTemplate="{TemplateBinding ContentTemplate}"
											ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
											RecognizesAccessKey="True"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											UseLayoutRounding="False"
											Content="{Binding Content, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
											ContentCharacterCasing="{Binding Path=(Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" />
									</StackPanel>
								</DockPanel>
								<FrameworkElement.ContextMenu>
									<ContextMenu
										Name="PART_Menu"
										MinWidth="{TemplateBinding ActualWidth}"
										DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
										ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
										ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
										ItemStringFormat="{TemplateBinding ItemStringFormat}"
										ItemTemplate="{TemplateBinding ItemTemplate}"
										ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
										ItemsPanel="{TemplateBinding ItemsPanel}"
										ItemsSource="{TemplateBinding ItemsSource}"
										Placement="Bottom"
										StaysOpen="False"
										Style="{TemplateBinding Controls:MenuStyle}"
										UseLayoutRounding="False"
										IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
								</FrameworkElement.ContextMenu>
							</Button>
						</Controls:ClipBorder>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger
							Property="Controls:DropDownButton.Content"
							Value="{x:Null}">
							<Setter
								TargetName="PART_ButtonContent"
								Property="Margin"
								Value="0" />
						</Trigger>
						<Trigger
							Property="Controls:DropDownButton.Orientation"
							Value="Vertical">
							<Setter
								TargetName="PART_Arrow"
								Property="Dock"
								Value="Bottom" />
							<Setter
								TargetName="PART_Arrow"
								Property="Margin"
								Value="0 0 0 3" />
							<Setter
								TargetName="PART_ContentOrientation"
								Property="StackPanel.Orientation"
								Value="Vertical" />
						</Trigger>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="PART_Arrow"
								Property="Foreground"
								Value="{Binding Path=ArrowMouseOverBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger
							SourceName="PART_Button"
							Property="IsPressed"
							Value="True">
							<Setter
								TargetName="PART_Arrow"
								Property="Foreground"
								Value="{Binding Path=ArrowPressedBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
		<Style.Triggers>
			<Trigger
				Property="UIElement.IsFocused"
				Value="True">
				<Setter
					Property="BorderBrush"
					Value="{DynamicResource AccentColorBrush}" />
			</Trigger>
			<Trigger
				Property="UIElement.IsKeyboardFocusWithin"
				Value="True">
				<Setter
					Property="BorderBrush"
					Value="{DynamicResource AccentColorBrush}" />
			</Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					Property="UIElement.Opacity"
					Value=".55" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>
