<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls" xmlns:Converters="clr-namespace:MahApps.Metro.Converters">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary
			Source="pack://application:,,,/MahApps.Metro;component/Styles/Shared.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<BooleanToVisibilityConverter
		x:Key="BooleanToVisibilityConverter" />
	<Style
		TargetType="{x:Type TextBox}"
		x:Key="MetroTextBox">
		<Setter
			Property="Background"
			Value="{DynamicResource ControlBackgroundBrush}" />
		<Setter
			Property="BorderBrush"
			Value="{DynamicResource TextBoxBorderBrush}" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="TextBoxBase.CaretBrush"
			Value="{DynamicResource BlackBrush}" />
		<Setter
			Property="FrameworkElement.ContextMenu"
			Value="{DynamicResource TextBoxMetroContextMenu}" />
		<Setter
			Property="Controls:ControlsHelper.FocusBorderBrush"
			Value="{DynamicResource TextBoxFocusBorderBrush}" />
		<Setter
			Property="Controls:ControlsHelper.MouseOverBorderBrush"
			Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
		<Setter
			Property="Controls:TextBoxHelper.ButtonFontSize"
			Value="{DynamicResource ClearTextButtonFontSize}" />
		<Setter
			Property="Controls:TextBoxHelper.ButtonWidth"
			Value="22" />
		<Setter
			Property="Controls:TextBoxHelper.IsMonitoring"
			Value="True" />
		<Setter
			Property="Controls:TextBoxHelper.IsSpellCheckContextMenuEnabled"
			Value="{Binding Path=(SpellCheck.IsEnabled), RelativeSource={RelativeSource Self}}" />
		<Setter
			Property="Controls:TextBoxHelper.WatermarkWrapping"
			Value="{Binding Path=TextWrapping, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
		<Setter
			Property="FontFamily"
			Value="{DynamicResource ContentFontFamily}" />
		<Setter
			Property="FontSize"
			Value="{DynamicResource ContentFontSize}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource TextBrush}" />
		<Setter
			Property="MinHeight"
			Value="26" />
		<Setter
			Property="Padding"
			Value="0" />
		<Setter
			Property="TextBoxBase.SelectionBrush"
			Value="{DynamicResource HighlightBrush}" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type TextBox}">
					<FrameworkTemplate.Resources>
						<ResourceDictionary>
							<Storyboard
								x:Key="enterGotFocus">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									To=".2"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="exitGotFocus">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="enterHasText">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									From=".2"
									To="0"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="exitHasText">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
							</Storyboard>
						</ResourceDictionary>
					</FrameworkTemplate.Resources>
					<Grid>
						<AdornerDecorator
							Name="PART_WaitingForDataEffectAdornerDecorator"
							Visibility="Collapsed">
							<Border
								Name="PART_WaitingForDataEffectGrid"
								Background="{TemplateBinding Background}"
								BorderBrush="#00FFFFFF"
								BorderThickness="{TemplateBinding BorderThickness}"
								Effect="{DynamicResource WaitingForDataEffect}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</AdornerDecorator>
						<Border
							Name="Base"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<Grid
							Name="PART_InnerGrid"
							Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Name="TextColumn"
									Width="*" />
								<ColumnDefinition
									Name="ButtonColumn"
									Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition
									Height="Auto" />
								<RowDefinition
									Name="ButtonRow"
									Height="*" />
							</Grid.RowDefinitions>
							<ScrollViewer
								Name="PART_ContentHost"
								Grid.Row="1"
								Grid.Column="0"
								Margin="2"
								VerticalAlignment="Stretch"
								BorderThickness="0"
								IsTabStop="False"
								Background="{x:Null}" />
							<TextBlock
								Name="PART_Message"
								Grid.Row="1"
								Grid.Column="0"
								Margin="6 2 6 2"
								Padding="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Foreground="{TemplateBinding Foreground}"
								Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}"
								Text="{TemplateBinding Controls:Watermark}"
								TextAlignment="{TemplateBinding Controls:WatermarkAlignment}"
								TextTrimming="{TemplateBinding Controls:WatermarkTrimming}"
								TextWrapping="{TemplateBinding Controls:WatermarkWrapping}"
								Visibility="Collapsed" />
							<ContentControl
								Name="PART_FloatingMessageContainer"
								Grid.Row="0"
								Grid.Column="0"
								Style="{DynamicResource FloatingMessageContainerStyle}">
								<FrameworkElement.Height>
									<MultiBinding
										Converter="{Converters:MathMultiplyConverter}">
										<Binding
											ElementName="PART_FloatingMessage"
											Mode="OneWay"
											Path="ActualHeight" />
										<Binding
											ElementName="PART_FloatingMessageContainer"
											Mode="OneWay"
											Path="Opacity" />
									</MultiBinding>
								</FrameworkElement.Height>
								<TextBlock
									Name="PART_FloatingMessage"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Foreground="{TemplateBinding Foreground}"
									Style="{DynamicResource MetroAutoCollapsingTextBlock}"
									Text="{TemplateBinding Controls:Watermark}"
									TextAlignment="{TemplateBinding Controls:WatermarkAlignment}"
									TextTrimming="{TemplateBinding Controls:WatermarkTrimming}">
									<UIElement.RenderTransform>
										<TranslateTransform
											x:Name="FloatingMessageTransform">
											<TranslateTransform.Y>
												<MultiBinding
													Converter="{Converters:MathSubtractConverter}">
													<Binding
														ElementName="PART_FloatingMessage"
														Mode="OneWay"
														Path="ActualHeight" />
													<Binding
														ElementName="PART_FloatingMessageContainer"
														Mode="OneWay"
														Path="ActualHeight" />
												</MultiBinding>
											</TranslateTransform.Y>
										</TranslateTransform>
									</UIElement.RenderTransform>
								</TextBlock>
							</ContentControl>
							<Button
								Name="PART_ClearText"
								Grid.Row="0"
								Grid.RowSpan="2"
								Grid.Column="1"
								Width="{TemplateBinding Controls:ButtonWidth}"
								Content="{TemplateBinding Controls:ButtonContent}"
								ContentTemplate="{TemplateBinding Controls:ButtonContentTemplate}"
								Focusable="False"
								FontFamily="{TemplateBinding Controls:ButtonFontFamily}"
								FontSize="{TemplateBinding Controls:ButtonFontSize}"
								Foreground="{TemplateBinding Foreground}"
								IsTabStop="False"
								Style="{DynamicResource ChromelessButtonStyle}"
								Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="{Binding Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</Grid>
						<Border
							Name="DisabledVisualElement"
							Background="{DynamicResource ControlsDisabledBrush}"
							BorderBrush="{DynamicResource ControlsDisabledBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsHitTestVisible="False"
							Opacity="0"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							Visibility="{Binding Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger
							Value="Left"
							Binding="{Binding Path=(Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}">
							<Setter
								TargetName="ButtonColumn"
								Property="Width"
								Value="*" />
							<Setter
								TargetName="PART_ClearText"
								Property="Column"
								Value="0" />
							<Setter
								TargetName="PART_ContentHost"
								Property="Column"
								Value="1" />
							<Setter
								TargetName="PART_Message"
								Property="Column"
								Value="1" />
							<Setter
								TargetName="TextColumn"
								Property="Width"
								Value="Auto" />
						</DataTrigger>
						<DataTrigger
							Value=""
							Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}}">
							<Setter
								TargetName="PART_Message"
								Property="Visibility"
								Value="Visible" />
						</DataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition
									Value="True"
									Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="True"
									Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="True"
									Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" />
							</MultiDataTrigger.Conditions>
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
							</TriggerBase.ExitActions>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition
									Value="Right"
									Binding="{Binding Path=(Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="False"
									Binding="{Binding Path=(Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" />
							</MultiDataTrigger.Conditions>
							<Setter
								TargetName="PART_ContentHost"
								Property="ColumnSpan"
								Value="2" />
							<Setter
								TargetName="PART_Message"
								Property="ColumnSpan"
								Value="2" />
						</MultiDataTrigger>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="Base"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								TargetName="DisabledVisualElement"
								Property="UIElement.Opacity"
								Value="0.6" />
						</Trigger>
						<Trigger
							Property="TextBoxBase.IsReadOnly"
							Value="True">
							<Setter
								TargetName="PART_ClearText"
								Property="IsEnabled"
								Value="False" />
						</Trigger>
						<Trigger
							Property="UIElement.IsFocused"
							Value="True">
							<Setter
								TargetName="Base"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter
								TargetName="PART_FloatingMessage"
								Value="{DynamicResource AccentColorBrush}"
								Property="Foreground" />
							<Setter
								TargetName="PART_FloatingMessage"
								Property="UIElement.Opacity"
								Value="1" />
						</Trigger>
						<Trigger
							SourceName="PART_ClearText"
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource GrayBrush8}"
								Property="Background" />
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource AccentColorBrush}"
								Property="Foreground" />
						</Trigger>
						<Trigger
							SourceName="PART_ClearText"
							Property="IsPressed"
							Value="True">
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource BlackBrush}"
								Property="Background" />
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource WhiteBrush}"
								Property="Foreground" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="Controls:TextBoxHelper.HasText"
									Value="False" />
								<Condition
									Property="UIElement.IsFocused"
									Value="True" />
							</MultiTrigger.Conditions>
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource enterGotFocus}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource exitGotFocus}" />
							</TriggerBase.ExitActions>
						</MultiTrigger>
						<Trigger
							Property="Controls:TextBoxHelper.HasText"
							Value="True">
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource enterHasText}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource exitHasText}" />
							</TriggerBase.ExitActions>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="UIElement.IsVisible"
									Value="True" />
								<Condition
									Property="Controls:TextBoxHelper.IsWaitingForData"
									Value="True" />
							</MultiTrigger.Conditions>
							<Setter
								TargetName="PART_WaitingForDataEffectAdornerDecorator"
								Property="Visibility"
								Value="Visible" />
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource WaitingForDataStoryboard}" />
							</TriggerBase.EnterActions>
						</MultiTrigger>
						<Trigger
							Property="Controls:TextBoxHelper.IsWaitingForData"
							Value="False">
							<Setter
								TargetName="PART_WaitingForDataEffectAdornerDecorator"
								Property="Visibility"
								Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="Validation.ErrorTemplate"
			Value="{DynamicResource ValidationErrorTemplate}" />
	</Style>
	<Style
		BasedOn="{StaticResource MetroTextBox}"
		TargetType="{x:Type TextBox}"
		x:Key="MetroButtonTextBox">
		<Setter
			Property="Controls:TextBoxHelper.ButtonTemplate"
			Value="{DynamicResource ChromelessButtonTemplate}" />
		<Setter
			Property="Controls:TextBoxHelper.TextButton"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type TextBox}">
					<FrameworkTemplate.Resources>
						<ResourceDictionary>
							<Storyboard
								x:Key="enterGotFocus">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									To=".2"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="exitGotFocus">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="enterHasText">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									From=".2"
									To="0"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="exitHasText">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
							</Storyboard>
						</ResourceDictionary>
					</FrameworkTemplate.Resources>
					<Grid>
						<AdornerDecorator
							Name="PART_WaitingForDataEffectAdornerDecorator"
							Visibility="Collapsed">
							<Border
								Name="PART_WaitingForDataEffectGrid"
								Background="{TemplateBinding Background}"
								BorderBrush="#00FFFFFF"
								BorderThickness="{TemplateBinding BorderThickness}"
								Effect="{DynamicResource WaitingForDataEffect}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</AdornerDecorator>
						<Border
							Name="Base"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<Grid
							Name="PART_InnerGrid"
							Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Name="TextColumn"
									Width="*" />
								<ColumnDefinition
									Name="ButtonColumn"
									Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition
									Height="Auto" />
								<RowDefinition
									Name="ButtonRow"
									Height="*" />
							</Grid.RowDefinitions>
							<ScrollViewer
								Name="PART_ContentHost"
								Grid.Row="1"
								Grid.Column="0"
								Margin="2"
								VerticalAlignment="Stretch"
								BorderThickness="0"
								IsTabStop="False"
								Background="{x:Null}" />
							<TextBlock
								Name="PART_Message"
								Grid.Row="1"
								Grid.Column="0"
								Margin="6 2 6 2"
								Padding="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Foreground="{TemplateBinding Foreground}"
								Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}"
								Text="{TemplateBinding Controls:Watermark}"
								TextAlignment="{TemplateBinding Controls:WatermarkAlignment}"
								TextTrimming="{TemplateBinding Controls:WatermarkTrimming}"
								TextWrapping="{TemplateBinding Controls:WatermarkWrapping}"
								Visibility="Collapsed" />
							<ContentControl
								Name="PART_FloatingMessageContainer"
								Grid.Row="0"
								Grid.Column="0"
								Style="{DynamicResource FloatingMessageContainerStyle}">
								<FrameworkElement.Height>
									<MultiBinding
										Converter="{Converters:MathMultiplyConverter}">
										<Binding
											ElementName="PART_FloatingMessage"
											Mode="OneWay"
											Path="ActualHeight" />
										<Binding
											ElementName="PART_FloatingMessageContainer"
											Mode="OneWay"
											Path="Opacity" />
									</MultiBinding>
								</FrameworkElement.Height>
								<TextBlock
									Name="PART_FloatingMessage"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Foreground="{TemplateBinding Foreground}"
									Style="{DynamicResource MetroAutoCollapsingTextBlock}"
									Text="{TemplateBinding Controls:Watermark}"
									TextAlignment="{TemplateBinding Controls:WatermarkAlignment}"
									TextTrimming="{TemplateBinding Controls:WatermarkTrimming}">
									<UIElement.RenderTransform>
										<TranslateTransform
											x:Name="FloatingMessageTransform">
											<TranslateTransform.Y>
												<MultiBinding
													Converter="{Converters:MathSubtractConverter}">
													<Binding
														ElementName="PART_FloatingMessage"
														Mode="OneWay"
														Path="ActualHeight" />
													<Binding
														ElementName="PART_FloatingMessageContainer"
														Mode="OneWay"
														Path="ActualHeight" />
												</MultiBinding>
											</TranslateTransform.Y>
										</TranslateTransform>
									</UIElement.RenderTransform>
								</TextBlock>
							</ContentControl>
							<Button
								Name="PART_ClearText"
								Grid.Row="0"
								Grid.RowSpan="2"
								Grid.Column="1"
								Width="{TemplateBinding Controls:ButtonWidth}"
								Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="True"
								Content="{TemplateBinding Controls:ButtonContent}"
								ContentTemplate="{TemplateBinding Controls:ButtonContentTemplate}"
								Focusable="False"
								FontFamily="{TemplateBinding Controls:ButtonFontFamily}"
								FontSize="{TemplateBinding Controls:ButtonFontSize}"
								Foreground="{TemplateBinding Foreground}"
								IsTabStop="False"
								Style="{DynamicResource ChromelessButtonStyle}"
								Template="{TemplateBinding Controls:ButtonTemplate}"
								Visibility="{Binding Path=(Controls:TextBoxHelper.TextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</Grid>
						<Border
							Name="DisabledVisualElement"
							Background="{DynamicResource ControlsDisabledBrush}"
							BorderBrush="{DynamicResource ControlsDisabledBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsHitTestVisible="False"
							Opacity="0"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							Visibility="{Binding Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger
							Value="Left"
							Binding="{Binding Path=(Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}">
							<Setter
								TargetName="ButtonColumn"
								Property="Width"
								Value="*" />
							<Setter
								TargetName="PART_ClearText"
								Property="Column"
								Value="0" />
							<Setter
								TargetName="PART_ContentHost"
								Property="Column"
								Value="1" />
							<Setter
								TargetName="PART_Message"
								Property="Column"
								Value="1" />
							<Setter
								TargetName="TextColumn"
								Property="Width"
								Value="Auto" />
						</DataTrigger>
						<DataTrigger
							Value=""
							Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}}">
							<Setter
								TargetName="PART_Message"
								Property="Visibility"
								Value="Visible" />
						</DataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition
									Value="True"
									Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="True"
									Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="True"
									Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" />
							</MultiDataTrigger.Conditions>
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
							</TriggerBase.ExitActions>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition
									Value="Right"
									Binding="{Binding Path=(Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="False"
									Binding="{Binding Path=(Controls:TextBoxHelper.TextButton), RelativeSource={RelativeSource Self}}" />
							</MultiDataTrigger.Conditions>
							<Setter
								TargetName="PART_ContentHost"
								Property="ColumnSpan"
								Value="2" />
							<Setter
								TargetName="PART_Message"
								Property="ColumnSpan"
								Value="2" />
						</MultiDataTrigger>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="Base"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								TargetName="DisabledVisualElement"
								Property="UIElement.Opacity"
								Value="0.6" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="TextBoxBase.IsReadOnly"
									Value="True" />
								<Condition
									Property="Controls:TextBoxHelper.ButtonCommand"
									Value="{x:Null}" />
							</MultiTrigger.Conditions>
							<Setter
								TargetName="PART_ClearText"
								Property="IsEnabled"
								Value="False" />
						</MultiTrigger>
						<Trigger
							Property="UIElement.IsFocused"
							Value="True">
							<Setter
								TargetName="Base"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter
								TargetName="PART_FloatingMessage"
								Value="{DynamicResource AccentColorBrush}"
								Property="Foreground" />
							<Setter
								TargetName="PART_FloatingMessage"
								Property="UIElement.Opacity"
								Value="1" />
						</Trigger>
						<Trigger
							SourceName="PART_ClearText"
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource GrayBrush8}"
								Property="Background" />
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource AccentColorBrush}"
								Property="Foreground" />
						</Trigger>
						<Trigger
							SourceName="PART_ClearText"
							Property="IsPressed"
							Value="True">
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource BlackBrush}"
								Property="Background" />
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource WhiteBrush}"
								Property="Foreground" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="UIElement.IsVisible"
									Value="True" />
								<Condition
									Property="Controls:TextBoxHelper.IsWaitingForData"
									Value="True" />
							</MultiTrigger.Conditions>
							<Setter
								TargetName="PART_WaitingForDataEffectAdornerDecorator"
								Property="Visibility"
								Value="Visible" />
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource WaitingForDataStoryboard}" />
							</TriggerBase.EnterActions>
						</MultiTrigger>
						<Trigger
							Property="Controls:TextBoxHelper.IsWaitingForData"
							Value="False">
							<Setter
								TargetName="PART_WaitingForDataEffectAdornerDecorator"
								Property="Visibility"
								Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		BasedOn="{StaticResource MetroButtonTextBox}"
		TargetType="{x:Type TextBox}"
		x:Key="ButtonCommandMetroTextBox" />
	<Style
		BasedOn="{StaticResource MetroButtonTextBox}"
		TargetType="{x:Type TextBox}"
		x:Key="SearchMetroTextBox">
		<Setter
			Property="Controls:TextBoxHelper.ButtonContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<ContentControl
						Name="PART_PackIcon"
						Padding="3"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Content="M42.5,22A12.5,12.5 0 0,1 55,34.5A12.5,12.5 0 0,1 42.5,47C40.14,47 37.92,46.34 36,45.24L26.97,54.27C25.8,55.44 23.9,55.44 22.73,54.27C21.56,53.1 21.56,51.2 22.73,50.03L31.8,40.96C30.66,39.08 30,36.86 30,34.5A12.5,12.5 0 0,1 42.5,22M42.5,26A8.5,8.5 0 0,0 34,34.5A8.5,8.5 0 0,0 42.5,43A8.5,8.5 0 0,0 51,34.5A8.5,8.5 0 0,0 42.5,26Z"
						Style="{DynamicResource PathIconContentControlStyle}"
						Width="{Binding Path=(Controls:TextBoxHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource AncestorType=TextBox}}"
						Height="{Binding Path=(Controls:TextBoxHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource AncestorType=TextBox}}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		TargetType="{x:Type RichTextBox}"
		x:Key="MetroRichTextBox">
		<Style.Resources>
			<ResourceDictionary>
				<Style
					BasedOn="{StaticResource {x:Type Hyperlink}}"
					TargetType="{x:Type Hyperlink}"
					x:Key="{x:Type Hyperlink}">
					<Setter
						Property="Foreground"
						Value="{DynamicResource AccentColorBrush}" />
					<Setter
						Property="Inline.TextDecorations"
						Value="Underline" />
					<Style.Triggers>
						<Trigger
							Property="ContentElement.IsMouseOver"
							Value="True">
							<Setter
								Property="Foreground"
								Value="{DynamicResource HighlightBrush}" />
						</Trigger>
						<Trigger
							Property="ContentElement.IsEnabled"
							Value="False">
							<Setter
								Property="Foreground"
								Value="{DynamicResource SystemColors.GrayTextBrushKey}" />
						</Trigger>
						<Trigger
							Property="ContentElement.IsEnabled"
							Value="True">
							<Setter
								Property="FrameworkContentElement.Cursor"
								Value="Hand" />
						</Trigger>
					</Style.Triggers>
				</Style>
			</ResourceDictionary>
		</Style.Resources>
		<Setter
			Property="UIElement.AllowDrop"
			Value="True" />
		<Setter
			Property="Background"
			Value="{DynamicResource ControlBackgroundBrush}" />
		<Setter
			Property="BorderBrush"
			Value="{DynamicResource TextBoxBorderBrush}" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="TextBoxBase.CaretBrush"
			Value="{DynamicResource BlackBrush}" />
		<Setter
			Property="FrameworkElement.ContextMenu"
			Value="{DynamicResource TextBoxMetroContextMenu}" />
		<Setter
			Property="Controls:ControlsHelper.FocusBorderBrush"
			Value="{DynamicResource TextBoxFocusBorderBrush}" />
		<Setter
			Property="Controls:ControlsHelper.MouseOverBorderBrush"
			Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
		<Setter
			Property="Controls:TextBoxHelper.IsSpellCheckContextMenuEnabled"
			Value="{Binding Path=(SpellCheck.IsEnabled), RelativeSource={RelativeSource Self}}" />
		<Setter
			Property="FrameworkElement.FocusVisualStyle"
			Value="{x:Null}" />
		<Setter
			Property="FontFamily"
			Value="{DynamicResource ContentFontFamily}" />
		<Setter
			Property="FontSize"
			Value="{DynamicResource ContentFontSize}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource TextBrush}" />
		<Setter
			Property="MinHeight"
			Value="26" />
		<Setter
			Property="MinWidth"
			Value="10" />
		<Setter
			Property="Padding"
			Value="1" />
		<Setter
			Property="ScrollViewer.PanningMode"
			Value="VerticalFirst" />
		<Setter
			Property="TextBoxBase.SelectionBrush"
			Value="{DynamicResource HighlightBrush}" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Stylus.IsFlicksEnabled"
			Value="False" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type TextBoxBase}">
					<Grid>
						<Border
							Name="Bd"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<ScrollViewer
								Name="PART_ContentHost"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<Border
							Name="DisabledVisualElement"
							Background="{DynamicResource ControlsDisabledBrush}"
							BorderBrush="{DynamicResource ControlsDisabledBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsHitTestVisible="False"
							Opacity="0"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							Visibility="{Binding Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="Bd"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger
							Property="UIElement.IsFocused"
							Value="True">
							<Setter
								TargetName="Bd"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								TargetName="DisabledVisualElement"
								Property="UIElement.Opacity"
								Value="0.6" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
