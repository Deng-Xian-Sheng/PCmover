<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls" xmlns:Converters="clr-namespace:MahApps.Metro.Converters" xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary
			Source="pack://application:,,,/MahApps.Metro;component/Styles/Shared.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<Style
		TargetType="{x:Type DatePicker}"
		x:Key="MetroDatePicker">
		<Setter
			Property="Background"
			Value="{DynamicResource ControlBackgroundBrush}" />
		<Setter
			Property="BorderBrush"
			Value="{DynamicResource TextBoxBorderBrush}" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="DatePicker.CalendarStyle"
			Value="{DynamicResource MahApps.Metro.Styles.BaseMetroCalendar}" />
		<Setter
			Property="Controls:ControlsHelper.FocusBorderBrush"
			Value="{DynamicResource TextBoxFocusBorderBrush}" />
		<Setter
			Property="Controls:ControlsHelper.MouseOverBorderBrush"
			Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
		<Setter
			Property="Controls:TextBoxHelper.ButtonWidth"
			Value="22" />
		<Setter
			Property="Controls:TextBoxHelper.IsMonitoring"
			Value="True" />
		<Setter
			Property="FontFamily"
			Value="{DynamicResource ContentFontFamily}" />
		<Setter
			Property="FontSize"
			Value="{DynamicResource ContentFontSize}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource TextBrush}" />
		<Setter
			Property="DatePicker.IsTodayHighlighted"
			Value="True" />
		<Setter
			Property="MinHeight"
			Value="26" />
		<Setter
			Property="Padding"
			Value="2" />
		<Setter
			Property="DatePicker.SelectedDateFormat"
			Value="Short" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type DatePicker}">
					<Grid
						Name="PART_Root">
						<Border
							Name="Base"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<Grid
							Name="PART_InnerGrid"
							Margin="{TemplateBinding Padding}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Width="*" />
								<ColumnDefinition
									Name="ButtonColumn"
									Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition
									Height="Auto" />
								<RowDefinition
									Name="ButtonRow"
									Height="*" />
							</Grid.RowDefinitions>
							<Button
								Name="PART_Button"
								Grid.RowSpan="2"
								Grid.Column="1"
								Foreground="{TemplateBinding Foreground}"
								IsTabStop="False"
								Style="{DynamicResource ChromelessButtonStyle}">
								<ContentControl
									Width="{TemplateBinding Controls:ButtonWidth}"
									Height="{TemplateBinding Controls:ButtonWidth}"
									Padding="2"
									Content="M34,52H31V38.5C29.66,39.9 28.16,40.78 26.34,41.45V37.76C27.3,37.45 28.34,36.86 29.46,36C30.59,35.15 31.36,34.15 31.78,33H34V52M45,52V48H37V45L45,33H48V45H50V48H48V52H45M45,45V38.26L40.26,45H45M18,57V23H23V20A2,2 0 0,1 25,18H29C30.11,18 31,18.9 31,20V23H45V20A2,2 0 0,1 47,18H51C52.11,18 53,18.9 53,20V23H58V57H18M21,54H55V31H21V54M48.5,20A1.5,1.5 0 0,0 47,21.5V24.5A1.5,1.5 0 0,0 48.5,26H49.5C50.34,26 51,25.33 51,24.5V21.5A1.5,1.5 0 0,0 49.5,20H48.5M26.5,20A1.5,1.5 0 0,0 25,21.5V24.5A1.5,1.5 0 0,0 26.5,26H27.5A1.5,1.5 0 0,0 29,24.5V21.5A1.5,1.5 0 0,0 27.5,20H26.5Z"
									Style="{DynamicResource PathIconContentControlStyle}" />
							</Button>
							<DatePickerTextBox
								Name="PART_TextBox"
								Grid.Row="1"
								Grid.Column="0"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								CaretBrush="{DynamicResource BlackBrush}"
								Focusable="{TemplateBinding Focusable}"
								FontSize="{TemplateBinding FontSize}"
								Foreground="{TemplateBinding Foreground}"
								SelectionBrush="{DynamicResource HighlightBrush}"
								Controls:TextBoxHelper.Watermark="{Binding Path=(Controls:TextBoxHelper.Watermark), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
								Controls:TextBoxHelper.WatermarkAlignment="{Binding Path=(Controls:TextBoxHelper.WatermarkAlignment), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
								Controls:TextBoxHelper.WatermarkTrimming="{Binding Path=(Controls:TextBoxHelper.WatermarkTrimming), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
								<i:Interaction.Behaviors>
									<behaviours:DatePickerTextBoxBehavior />
								</i:Interaction.Behaviors>
							</DatePickerTextBox>
							<ContentControl
								Name="PART_FloatingMessageContainer"
								Grid.Row="0"
								Grid.Column="0"
								Style="{DynamicResource FloatingMessageContainerStyle}">
								<FrameworkElement.Height>
									<MultiBinding
										Converter="{Converters:MathMultiplyConverter}">
										<Binding
											ElementName="PART_FloatingMessage"
											Mode="OneWay"
											Path="ActualHeight" />
										<Binding
											ElementName="PART_FloatingMessageContainer"
											Mode="OneWay"
											Path="Opacity" />
									</MultiBinding>
								</FrameworkElement.Height>
								<TextBlock
									Name="PART_FloatingMessage"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Foreground="{TemplateBinding Foreground}"
									Style="{DynamicResource MetroAutoCollapsingTextBlock}"
									Text="{TemplateBinding Controls:Watermark}"
									TextAlignment="{TemplateBinding Controls:WatermarkAlignment}"
									TextTrimming="{TemplateBinding Controls:WatermarkTrimming}">
									<UIElement.RenderTransform>
										<TranslateTransform
											x:Name="FloatingMessageTransform">
											<TranslateTransform.Y>
												<MultiBinding
													Converter="{Converters:MathSubtractConverter}">
													<Binding
														ElementName="PART_FloatingMessage"
														Mode="OneWay"
														Path="ActualHeight" />
													<Binding
														ElementName="PART_FloatingMessageContainer"
														Mode="OneWay"
														Path="ActualHeight" />
												</MultiBinding>
											</TranslateTransform.Y>
										</TranslateTransform>
									</UIElement.RenderTransform>
								</TextBlock>
							</ContentControl>
							<Popup
								Name="PART_Popup"
								Grid.Row="1"
								Grid.Column="0"
								AllowsTransparency="True"
								Placement="Bottom"
								StaysOpen="False"
								PlacementTarget="{Binding ElementName=PART_Root}" />
						</Grid>
						<Border
							Name="DisabledVisualElement"
							Background="{DynamicResource ControlsDisabledBrush}"
							BorderBrush="{DynamicResource ControlsDisabledBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsHitTestVisible="False"
							Opacity="0"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="Controls:ControlsHelper.IsReadOnly"
							Value="True">
							<Setter
								TargetName="PART_Button"
								Property="IsEnabled"
								Value="False" />
							<Setter
								TargetName="PART_TextBox"
								Property="TextBoxBase.IsReadOnly"
								Value="True" />
						</Trigger>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="Base"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger
							SourceName="PART_TextBox"
							Property="UIElement.IsFocused"
							Value="True">
							<Setter
								TargetName="Base"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter
								TargetName="PART_FloatingMessage"
								Value="{DynamicResource AccentColorBrush}"
								Property="Foreground" />
							<Setter
								TargetName="PART_FloatingMessage"
								Property="UIElement.Opacity"
								Value="1" />
						</Trigger>
						<Trigger
							Property="UIElement.IsKeyboardFocusWithin"
							Value="True">
							<Setter
								TargetName="Base"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								TargetName="DisabledVisualElement"
								Property="UIElement.Opacity"
								Value="0.6" />
						</Trigger>
						<Trigger
							SourceName="PART_Button"
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="PART_Button"
								Value="{DynamicResource GrayBrush8}"
								Property="Background" />
							<Setter
								TargetName="PART_Button"
								Value="{DynamicResource AccentColorBrush}"
								Property="Foreground" />
						</Trigger>
						<Trigger
							SourceName="PART_Button"
							Property="IsPressed"
							Value="True">
							<Setter
								TargetName="PART_Button"
								Value="{DynamicResource BlackBrush}"
								Property="Background" />
							<Setter
								TargetName="PART_Button"
								Value="{DynamicResource WhiteBrush}"
								Property="Foreground" />
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition
									Value="True"
									Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="True"
									Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="True"
									Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" />
							</MultiDataTrigger.Conditions>
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
							</TriggerBase.ExitActions>
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="Validation.ErrorTemplate"
			Value="{DynamicResource ValidationErrorTemplate}" />
	</Style>
	<Style
		TargetType="{x:Type DatePickerTextBox}"
		x:Key="MetroDatePickerTextBox">
		<Setter
			Property="Background"
			Value="{DynamicResource ControlBackgroundBrush}" />
		<Setter
			Property="FrameworkElement.ContextMenu"
			Value="{DynamicResource TextBoxMetroContextMenu}" />
		<Setter
			Property="Controls:TextBoxHelper.IsMonitoring"
			Value="True" />
		<Setter
			Property="FrameworkElement.FocusVisualStyle"
			Value="{x:Null}" />
		<Setter
			Property="FontFamily"
			Value="{DynamicResource ContentFontFamily}" />
		<Setter
			Property="FontSize"
			Value="{DynamicResource ContentFontSize}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource TextBrush}" />
		<Setter
			Property="ScrollViewer.PanningMode"
			Value="VerticalFirst" />
		<Setter
			Property="Stylus.IsFlicksEnabled"
			Value="False" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type DatePickerTextBox}">
					<FrameworkTemplate.Resources>
						<ResourceDictionary>
							<Storyboard
								x:Key="EnterGotFocus">
								<DoubleAnimation
									Storyboard.TargetName="PART_Watermark"
									Storyboard.TargetProperty="Opacity"
									To=".2"
									Duration="0:0:0.2" />
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									To=".2"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="ExitGotFocus">
								<DoubleAnimation
									Storyboard.TargetName="PART_Watermark"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="EnterHasText">
								<DoubleAnimation
									Storyboard.TargetName="PART_Watermark"
									Storyboard.TargetProperty="Opacity"
									From=".2"
									To="0"
									Duration="0:0:0.2" />
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									From=".2"
									To="0"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="ExitHasText">
								<DoubleAnimation
									Storyboard.TargetName="PART_Watermark"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
							</Storyboard>
						</ResourceDictionary>
					</FrameworkTemplate.Resources>
					<Grid
						Name="PART_InnerGrid"
						Margin="2">
						<ScrollViewer
							Name="PART_ContentHost"
							VerticalAlignment="Stretch"
							BorderThickness="0"
							IsTabStop="False"
							Background="{x:Null}"
							FocusVisualStyle="{x:Null}" />
						<ContentControl
							Name="PART_Watermark"
							Margin="4 0 0 0"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							Controls:TextBoxHelper.WatermarkAlignment="{TemplateBinding Controls:WatermarkAlignment}"
							Controls:TextBoxHelper.WatermarkTrimming="{TemplateBinding Controls:WatermarkTrimming}"
							Focusable="False"
							Foreground="{TemplateBinding Foreground}"
							IsHitTestVisible="False"
							Opacity="0.6"
							Visibility="Hidden">
							<Control.Template>
								<ControlTemplate
									TargetType="{x:Type ContentControl}">
									<TextBlock
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										Text="{TemplateBinding Content}"
										TextAlignment="{TemplateBinding Controls:WatermarkAlignment}"
										TextTrimming="{TemplateBinding Controls:WatermarkTrimming}" />
								</ControlTemplate>
							</Control.Template>
						</ContentControl>
						<TextBlock
							Name="PART_Message"
							Margin="4 0 0 0"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Foreground="{TemplateBinding Foreground}"
							Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}"
							Text="{TemplateBinding Controls:Watermark}"
							TextAlignment="{TemplateBinding Controls:WatermarkAlignment}"
							TextTrimming="{TemplateBinding Controls:WatermarkTrimming}" />
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="Controls:TextBoxHelper.HasText"
									Value="False" />
								<Condition
									Property="UIElement.IsFocused"
									Value="True" />
							</MultiTrigger.Conditions>
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource EnterGotFocus}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource ExitGotFocus}" />
							</TriggerBase.ExitActions>
						</MultiTrigger>
						<DataTrigger
							Value=""
							Binding="{Binding Path=(Controls:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}">
							<Setter
								TargetName="PART_Watermark"
								Property="Visibility"
								Value="Visible" />
						</DataTrigger>
						<Trigger
							Property="Controls:TextBoxHelper.HasText"
							Value="True">
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource EnterHasText}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource ExitHasText}" />
							</TriggerBase.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
