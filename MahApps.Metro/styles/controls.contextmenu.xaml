<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="clr-namespace:MahApps.Metro.Controls">
	<MenuScrollingVisibilityConverter
		x:Key="MenuScrollingVisibilityConverter" />
	<Geometry
		x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
	<Geometry
		x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
	<Geometry
		x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
	<Geometry
		x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
	<Style
		TargetType="{x:Type Separator}"
		x:Key="{x:Static MenuItem.SeparatorStyleKey}">
		<Setter
			Property="Background"
			Value="{DynamicResource MenuBackgroundBrush}" />
		<Setter
			Property="IsTabStop"
			Value="False" />
		<Setter
			Property="Margin"
			Value="6 2 6 2" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Separator}">
					<Grid
						Margin="0 6 0 4"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Rectangle
							Height="1"
							Margin="20 0 1 1"
							Fill="{DynamicResource GrayBrush7}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							UseLayoutRounding="True" />
						<Rectangle
							Height="1"
							Margin="20 1 1 0"
							Fill="{DynamicResource WhiteBrush}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							UseLayoutRounding="True" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		TargetType="{x:Type Menu}"
		x:Key="MetroMenu">
		<Setter
			Property="Background"
			Value="{DynamicResource MenuBackgroundBrush}" />
		<Setter
			Property="FontFamily"
			Value="{DynamicResource SystemFonts.MenuFontFamilyKey}" />
		<Setter
			Property="FontSize"
			Value="{DynamicResource MenuFontSize}" />
		<Setter
			Property="FontStyle"
			Value="{DynamicResource SystemFonts.MenuFontStyleKey}" />
		<Setter
			Property="FontWeight"
			Value="{DynamicResource SystemFonts.MenuFontWeightKey}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource SystemColors.MenuTextBrushKey}" />
		<Setter
			Property="RenderOptions.ClearTypeHint"
			Value="Enabled" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Menu}">
					<Border
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<ItemsPresenter
							Margin="0"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="TextOptions.TextFormattingMode"
			Value="Ideal" />
	</Style>
	<Style
		TargetType="{x:Type ContextMenu}"
		x:Key="MetroContextMenu">
		<Setter
			Property="Background"
			Value="{DynamicResource ContextMenuBackgroundBrush}" />
		<Setter
			Property="Block.TextAlignment"
			Value="Left" />
		<Setter
			Property="BorderBrush"
			Value="{DynamicResource ContextMenuBorderBrush}" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="FontFamily"
			Value="{DynamicResource SystemFonts.MenuFontFamilyKey}" />
		<Setter
			Property="FontSize"
			Value="{DynamicResource ContextMenuFontSize}" />
		<Setter
			Property="FontStyle"
			Value="{DynamicResource SystemFonts.MenuFontStyleKey}" />
		<Setter
			Property="FontWeight"
			Value="{DynamicResource SystemFonts.MenuFontWeightKey}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource SystemColors.MenuTextBrushKey}" />
		<Setter
			Property="Grid.IsSharedSizeScope"
			Value="True" />
		<Setter
			Property="ContextMenu.HasDropShadow"
			Value="True" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Left" />
		<Setter
			Property="FrameworkElement.OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="RenderOptions.ClearTypeHint"
			Value="Enabled" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ContextMenu}">
					<Grid>
						<Rectangle
							Name="LayoutRoot"
							Fill="{TemplateBinding Background}" />
						<Border
							Name="Border"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<ScrollViewer
								Name="SubMenuScrollViewer"
								CanContentScroll="True"
								Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
								<ItemsPresenter
									Name="ItemsPresenter"
									Margin="0"
									Grid.IsSharedSizeScope="True"
									KeyboardNavigation.DirectionalNavigation="Cycle"
									KeyboardNavigation.TabNavigation="Cycle"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="ContextMenu.HasDropShadow"
							Value="True">
							<Setter
								TargetName="Border"
								Property="Margin"
								Value="0 0 6 6" />
							<Setter
								TargetName="LayoutRoot"
								Property="UIElement.Effect">
								<Setter.Value>
									<DropShadowEffect
										BlurRadius="4"
										Direction="315"
										Opacity="0.3"
										ShadowDepth="2"
										Color="{DynamicResource MenuShadowColor}" />
								</Setter.Value>
							</Setter>
							<Setter
								TargetName="LayoutRoot"
								Property="Margin"
								Value="0 0 6 6" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="TextOptions.TextFormattingMode"
			Value="Ideal" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
	</Style>
	<Style
		TargetType="{x:Type MenuItem}"
		x:Key="MetroMenuItem">
		<Setter
			Property="Background"
			Value="{DynamicResource MenuItemBackgroundBrush}" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter
			Property="RenderOptions.ClearTypeHint"
			Value="Enabled" />
		<Setter
			Property="ScrollViewer.PanningMode"
			Value="Both" />
		<Setter
			Property="Stylus.IsFlicksEnabled"
			Value="False" />
		<Setter
			Property="Template"
			Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
		<Setter
			Property="VerticalContentAlignment"
			Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Style.Triggers>
			<Trigger
				Property="MenuItem.Role"
				Value="TopLevelHeader">
				<Setter
					Property="Padding"
					Value="7 5 8 6" />
				<Setter
					Property="Template"
					Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
			</Trigger>
			<Trigger
				Property="MenuItem.Role"
				Value="TopLevelItem">
				<Setter
					Property="Padding"
					Value="7 5 8 6" />
				<Setter
					Property="Template"
					Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
			</Trigger>
			<Trigger
				Property="MenuItem.Role"
				Value="SubmenuHeader">
				<Setter
					Property="Padding"
					Value="2 6 2 6" />
				<Setter
					Property="Template"
					Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
			</Trigger>
			<Trigger
				Property="MenuItem.Role"
				Value="SubmenuItem">
				<Setter
					Property="Padding"
					Value="2 6 2 6" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style
		BasedOn="{StaticResource MetroMenuItem}"
		TargetType="{x:Type MenuItem}"
		x:Key="{x:Static controls:Spelling.SuggestionMenuItemStyleKey}">
		<Setter
			Property="FontWeight"
			Value="Bold" />
		<Setter
			Property="Header"
			Value="{Binding Path=CommandParameter, RelativeSource={RelativeSource Self}}" />
	</Style>
	<Style
		BasedOn="{StaticResource MetroMenuItem}"
		TargetType="{x:Type MenuItem}"
		x:Key="{x:Static controls:Spelling.IgnoreAllMenuItemStyleKey}">
		<Setter
			Property="Header"
			Value="Ignore All" />
	</Style>
	<Style
		BasedOn="{StaticResource MetroMenuItem}"
		TargetType="{x:Type MenuItem}"
		x:Key="{x:Static controls:Spelling.NoSuggestionsMenuItemStyleKey}">
		<Setter
			Property="Header"
			Value="(no spelling suggestions)" />
		<Setter
			Property="IsEnabled"
			Value="False" />
	</Style>
	<Style
		BasedOn="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}"
		TargetType="{x:Type Separator}"
		x:Key="{x:Static controls:Spelling.SeparatorStyleKey}" />
	<ContextMenu
		Style="{StaticResource MetroContextMenu}"
		x:Key="TextBoxMetroContextMenu">
		<MenuItem
			Command="ApplicationCommands.Cut"
			Style="{DynamicResource MetroMenuItem}" />
		<MenuItem
			Command="ApplicationCommands.Copy"
			Style="{DynamicResource MetroMenuItem}" />
		<MenuItem
			Command="ApplicationCommands.Paste"
			Style="{DynamicResource MetroMenuItem}" />
	</ContextMenu>
	<Style
		TargetType="{x:Type RepeatButton}"
		BasedOn="{x:Null}"
		x:Key="MenuScrollButton">
		<Setter
			Property="ButtonBase.ClickMode"
			Value="Hover" />
		<Setter
			Property="MinHeight"
			Value="0" />
		<Setter
			Property="MinWidth"
			Value="0" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type RepeatButton}">
					<DockPanel
						Background="#00FFFFFF"
						SnapsToDevicePixels="True">
						<Rectangle
							Name="R1"
							Width="1"
							DockPanel.Dock="Right"
							Fill="#00FFFFFF" />
						<Rectangle
							Name="B1"
							Height="1"
							DockPanel.Dock="Bottom"
							Fill="#00FFFFFF" />
						<Rectangle
							Name="L1"
							Width="1"
							DockPanel.Dock="Left"
							Fill="#00FFFFFF" />
						<Rectangle
							Name="T1"
							Height="1"
							DockPanel.Dock="Top"
							Fill="#00FFFFFF" />
						<ContentPresenter
							Name="ContentContainer"
							Margin="6"
							HorizontalAlignment="Center"
							VerticalAlignment="Center" />
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger
							Property="IsPressed"
							Value="True">
							<Setter
								TargetName="B1"
								Value="{DynamicResource SystemColors.ControlLightLightBrushKey}"
								Property="Fill" />
							<Setter
								TargetName="L1"
								Value="{DynamicResource SystemColors.ControlDarkDarkBrushKey}"
								Property="Fill" />
							<Setter
								TargetName="R1"
								Value="{DynamicResource SystemColors.ControlLightLightBrushKey}"
								Property="Fill" />
							<Setter
								TargetName="T1"
								Value="{DynamicResource SystemColors.ControlDarkDarkBrushKey}"
								Property="Fill" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		TargetType="{x:Type ScrollViewer}"
		BasedOn="{x:Null}"
		x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}">
		<Setter
			Property="HorizontalScrollBarVisibility"
			Value="Hidden" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ScrollViewer}">
					<Grid
						SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition
								Height="Auto" />
							<RowDefinition
								Height="*" />
							<RowDefinition
								Height="Auto" />
						</Grid.RowDefinitions>
						<Border
							Grid.Row="1"
							Grid.Column="0">
							<ScrollContentPresenter
								Margin="{TemplateBinding Padding}" />
						</Border>
						<RepeatButton
							Grid.Row="0"
							Grid.Column="0"
							Command="{x:Static ScrollBar.LineUpCommand}"
							Focusable="False"
							Style="{StaticResource MenuScrollButton}"
							CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
							<UIElement.Visibility>
								<MultiBinding
									ConverterParameter="0"
									FallbackValue="Visibility.Collapsed"
									Converter="{StaticResource MenuScrollingVisibilityConverter}">
									<Binding
										Path="ComputedVerticalScrollBarVisibility"
										RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding
										Path="VerticalOffset"
										RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding
										Path="ExtentHeight"
										RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding
										Path="ViewportHeight"
										RelativeSource="{RelativeSource TemplatedParent}" />
								</MultiBinding>
							</UIElement.Visibility>
							<Path
								Fill="{DynamicResource SystemColors.MenuTextBrushKey}"
								Data="{StaticResource UpArrow}" />
						</RepeatButton>
						<RepeatButton
							Grid.Row="2"
							Grid.Column="0"
							Command="{x:Static ScrollBar.LineDownCommand}"
							Focusable="False"
							Style="{StaticResource MenuScrollButton}"
							CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
							<UIElement.Visibility>
								<MultiBinding
									ConverterParameter="100"
									FallbackValue="Visibility.Collapsed"
									Converter="{StaticResource MenuScrollingVisibilityConverter}">
									<Binding
										Path="ComputedVerticalScrollBarVisibility"
										RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding
										Path="VerticalOffset"
										RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding
										Path="ExtentHeight"
										RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding
										Path="ViewportHeight"
										RelativeSource="{RelativeSource TemplatedParent}" />
								</MultiBinding>
							</UIElement.Visibility>
							<Path
								Fill="{DynamicResource SystemColors.MenuTextBrushKey}"
								Data="{StaticResource DownArrow}" />
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="VerticalScrollBarVisibility"
			Value="Auto" />
	</Style>
	<ControlTemplate
		TargetType="{x:Type ContentControl}"
		x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}">
		<Border
			Background="{DynamicResource SubMenuBackgroundBrush}"
			BorderBrush="{DynamicResource SubMenuBorderBrush}"
			BorderThickness="1">
			<ContentPresenter />
		</Border>
	</ControlTemplate>
	<ControlTemplate
		TargetType="{x:Type MenuItem}"
		x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}">
		<Grid
			SnapsToDevicePixels="True">
			<Rectangle
				Name="Bg"
				Margin="1"
				Fill="{TemplateBinding Background}"
				Stroke="{TemplateBinding BorderBrush}"
				StrokeThickness="1" />
			<DockPanel>
				<ContentPresenter
					Name="Icon"
					Margin="4 0 6 0"
					VerticalAlignment="Center"
					ContentSource="Icon"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Path
					Name="GlyphPanel"
					Margin="8 0 0 0"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Fill="{DynamicResource CheckmarkFill}"
					FlowDirection="LeftToRight"
					Visibility="Collapsed"
					Data="{StaticResource Checkmark}" />
				<ContentPresenter
					Margin="{TemplateBinding Padding}"
					ContentSource="Header"
					RecognizesAccessKey="True"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			</DockPanel>
			<Popup
				Name="PART_Popup"
				AllowsTransparency="True"
				Focusable="False"
				HorizontalOffset="1"
				Placement="Bottom"
				PopupAnimation="{DynamicResource SystemParameters.MenuPopupAnimationKey}"
				VerticalOffset="-1"
				IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
				<Grid>
					<Rectangle
						Name="LayoutRoot"
						Fill="{TemplateBinding Background}" />
					<ContentControl
						Name="SubMenuBorder"
						IsTabStop="False"
						Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
						<ScrollViewer
							Name="SubMenuScrollViewer"
							CanContentScroll="True"
							Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<ItemsPresenter
								Name="ItemsPresenter"
								Margin="0"
								Grid.IsSharedSizeScope="True"
								KeyboardNavigation.DirectionalNavigation="Cycle"
								KeyboardNavigation.TabNavigation="Cycle"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</ContentControl>
				</Grid>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger
				Property="MenuItem.IsSuspendingPopupAnimation"
				Value="True">
				<Setter
					TargetName="PART_Popup"
					Property="PopupAnimation"
					Value="None" />
			</Trigger>
			<Trigger
				Property="MenuItem.Icon"
				Value="{x:Null}">
				<Setter
					TargetName="Icon"
					Property="Visibility"
					Value="Collapsed" />
			</Trigger>
			<Trigger
				Property="MenuItem.IsChecked"
				Value="True">
				<Setter
					TargetName="GlyphPanel"
					Property="Visibility"
					Value="Visible" />
				<Setter
					TargetName="Icon"
					Property="Visibility"
					Value="Collapsed" />
			</Trigger>
			<Trigger
				SourceName="PART_Popup"
				Property="Popup.HasDropShadow"
				Value="True">
				<Setter
					TargetName="LayoutRoot"
					Property="UIElement.Effect">
					<Setter.Value>
						<DropShadowEffect
							BlurRadius="4"
							Direction="315"
							Opacity="0.3"
							ShadowDepth="2"
							Color="{DynamicResource MenuShadowColor}" />
					</Setter.Value>
				</Setter>
				<Setter
					TargetName="LayoutRoot"
					Property="Margin"
					Value="0 0 6 6" />
				<Setter
					TargetName="SubMenuBorder"
					Property="Margin"
					Value="0 0 6 6" />
			</Trigger>
			<Trigger
				Property="MenuItem.IsHighlighted"
				Value="True">
				<Setter
					TargetName="Bg"
					Value="{DynamicResource TopMenuItemSelectionStroke}"
					Property="Stroke" />
			</Trigger>
			<Trigger
				Property="UIElement.IsKeyboardFocused"
				Value="True">
				<Setter
					TargetName="Bg"
					Value="{DynamicResource TopMenuItemPressedFill}"
					Property="Fill" />
				<Setter
					TargetName="Bg"
					Value="{DynamicResource TopMenuItemPressedStroke}"
					Property="Stroke" />
			</Trigger>
			<Trigger
				Property="MenuItem.IsSubmenuOpen"
				Value="True">
				<Setter
					TargetName="Bg"
					Value="{DynamicResource TopMenuItemPressedFill}"
					Property="Fill" />
				<Setter
					TargetName="Bg"
					Value="{DynamicResource TopMenuItemPressedStroke}"
					Property="Stroke" />
			</Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					Value="{DynamicResource DisabledMenuItemForeground}"
					Property="Foreground" />
				<Setter
					TargetName="GlyphPanel"
					Value="{DynamicResource DisabledMenuItemGlyphPanel}"
					Property="Fill" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate
		TargetType="{x:Type MenuItem}"
		x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}">
		<Grid
			SnapsToDevicePixels="True">
			<Rectangle
				Name="Bg"
				Margin="1"
				Fill="{TemplateBinding Background}"
				Stroke="{TemplateBinding BorderBrush}"
				StrokeThickness="1" />
			<DockPanel>
				<ContentPresenter
					Name="Icon"
					Margin="4 0 6 0"
					VerticalAlignment="Center"
					ContentSource="Icon"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Path
					Name="GlyphPanel"
					Margin="8 0 0 0"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Fill="{DynamicResource CheckmarkFill}"
					FlowDirection="LeftToRight"
					Visibility="Collapsed"
					Data="{StaticResource Checkmark}" />
				<ContentPresenter
					Margin="{TemplateBinding Padding}"
					ContentSource="Header"
					RecognizesAccessKey="True"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			</DockPanel>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger
				Property="MenuItem.Icon"
				Value="{x:Null}">
				<Setter
					TargetName="Icon"
					Property="Visibility"
					Value="Collapsed" />
			</Trigger>
			<Trigger
				Property="MenuItem.IsChecked"
				Value="True">
				<Setter
					TargetName="GlyphPanel"
					Property="Visibility"
					Value="Visible" />
				<Setter
					TargetName="Icon"
					Property="Visibility"
					Value="Collapsed" />
			</Trigger>
			<Trigger
				Property="MenuItem.IsHighlighted"
				Value="True">
				<Setter
					TargetName="Bg"
					Value="{DynamicResource TopMenuItemSelectionStroke}"
					Property="Stroke" />
			</Trigger>
			<Trigger
				Property="UIElement.IsKeyboardFocused"
				Value="True">
				<Setter
					TargetName="Bg"
					Value="{DynamicResource TopMenuItemPressedFill}"
					Property="Fill" />
				<Setter
					TargetName="Bg"
					Value="{DynamicResource TopMenuItemPressedStroke}"
					Property="Stroke" />
			</Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					Value="{DynamicResource DisabledMenuItemForeground}"
					Property="Foreground" />
				<Setter
					TargetName="GlyphPanel"
					Value="{DynamicResource DisabledMenuItemGlyphPanel}"
					Property="Fill" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate
		TargetType="{x:Type MenuItem}"
		x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}">
		<Grid
			SnapsToDevicePixels="True">
			<Rectangle
				Name="Bg"
				Fill="{TemplateBinding Background}"
				Stroke="{TemplateBinding BorderBrush}"
				StrokeThickness="1" />
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition
						Width="Auto"
						MinWidth="24"
						SharedSizeGroup="MenuItemIconColumnGroup" />
					<ColumnDefinition
						Width="4" />
					<ColumnDefinition
						Width="*" />
					<ColumnDefinition
						Width="6" />
					<ColumnDefinition
						Width="Auto"
						SharedSizeGroup="MenuItemIGTColumnGroup" />
					<ColumnDefinition
						Width="17" />
				</Grid.ColumnDefinitions>
				<ContentPresenter
					Name="Icon"
					Margin="1"
					VerticalAlignment="Center"
					ContentSource="Icon"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Path
					Name="GlyphPanel"
					Margin="5 0 0 0"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Fill="{DynamicResource CheckmarkFill}"
					FlowDirection="LeftToRight"
					Visibility="Collapsed"
					Data="{StaticResource Checkmark}" />
				<ContentPresenter
					Grid.Column="2"
					Margin="{TemplateBinding Padding}"
					ContentSource="Header"
					RecognizesAccessKey="True"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<TextBlock
					Grid.Column="4"
					Margin="{TemplateBinding Padding}"
					Text="{TemplateBinding InputGestureText}"
					Visibility="Collapsed" />
				<Path
					Grid.Column="5"
					Margin="4 0 0 0"
					VerticalAlignment="Center"
					Fill="{DynamicResource RightArrowFill}"
					Data="{StaticResource RightArrow}" />
			</Grid>
			<Popup
				Name="PART_Popup"
				AllowsTransparency="True"
				Focusable="False"
				HorizontalOffset="-2"
				Placement="Right"
				PopupAnimation="{DynamicResource SystemParameters.MenuPopupAnimationKey}"
				VerticalOffset="-3"
				IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
				<Grid>
					<Rectangle
						Name="LayoutRoot"
						Fill="{TemplateBinding Background}" />
					<ContentControl
						Name="SubMenuBorder"
						IsTabStop="False"
						Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
						<ScrollViewer
							Name="SubMenuScrollViewer"
							CanContentScroll="True"
							Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<ItemsPresenter
								Name="ItemsPresenter"
								Margin="0"
								Grid.IsSharedSizeScope="True"
								KeyboardNavigation.DirectionalNavigation="Cycle"
								KeyboardNavigation.TabNavigation="Cycle"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</ContentControl>
				</Grid>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger
				Property="MenuItem.IsSuspendingPopupAnimation"
				Value="True">
				<Setter
					TargetName="PART_Popup"
					Property="PopupAnimation"
					Value="None" />
			</Trigger>
			<Trigger
				Property="MenuItem.Icon"
				Value="{x:Null}">
				<Setter
					TargetName="Icon"
					Property="Visibility"
					Value="Collapsed" />
			</Trigger>
			<Trigger
				Property="MenuItem.IsChecked"
				Value="True">
				<Setter
					TargetName="GlyphPanel"
					Property="Visibility"
					Value="Visible" />
				<Setter
					TargetName="Icon"
					Property="Visibility"
					Value="Collapsed" />
			</Trigger>
			<Trigger
				SourceName="PART_Popup"
				Property="Popup.HasDropShadow"
				Value="True">
				<Setter
					TargetName="LayoutRoot"
					Property="UIElement.Effect">
					<Setter.Value>
						<DropShadowEffect
							BlurRadius="4"
							Direction="315"
							Opacity="0.3"
							ShadowDepth="2"
							Color="{DynamicResource MenuShadowColor}" />
					</Setter.Value>
				</Setter>
				<Setter
					TargetName="LayoutRoot"
					Property="Margin"
					Value="0 0 6 6" />
				<Setter
					TargetName="SubMenuBorder"
					Property="Margin"
					Value="0 0 6 6" />
			</Trigger>
			<Trigger
				Property="MenuItem.IsHighlighted"
				Value="True">
				<Setter
					TargetName="Bg"
					Value="{DynamicResource MenuItemSelectionFill}"
					Property="Fill" />
				<Setter
					TargetName="Bg"
					Value="{DynamicResource MenuItemSelectionStroke}"
					Property="Stroke" />
			</Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					Value="{DynamicResource DisabledMenuItemForeground}"
					Property="Foreground" />
				<Setter
					TargetName="GlyphPanel"
					Value="{DynamicResource DisabledMenuItemGlyphPanel}"
					Property="Fill" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate
		TargetType="{x:Type MenuItem}"
		x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}">
		<Grid
			SnapsToDevicePixels="True">
			<Rectangle
				Name="Bg"
				Fill="{TemplateBinding Background}"
				Stroke="{TemplateBinding BorderBrush}"
				StrokeThickness="1" />
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition
						Width="Auto"
						MinWidth="24"
						SharedSizeGroup="MenuItemIconColumnGroup" />
					<ColumnDefinition
						Width="4" />
					<ColumnDefinition
						Width="*" />
					<ColumnDefinition
						Width="6" />
					<ColumnDefinition
						Width="Auto"
						SharedSizeGroup="MenuItemIGTColumnGroup" />
					<ColumnDefinition
						Width="17" />
				</Grid.ColumnDefinitions>
				<ContentPresenter
					Name="Icon"
					Margin="1"
					VerticalAlignment="Center"
					ContentSource="Icon"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Path
					Name="GlyphPanel"
					Margin="5 0 0 0"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Fill="{DynamicResource CheckmarkFill}"
					FlowDirection="LeftToRight"
					Visibility="Collapsed"
					Data="{StaticResource Checkmark}" />
				<ContentPresenter
					Grid.Column="2"
					Margin="{TemplateBinding Padding}"
					ContentSource="Header"
					RecognizesAccessKey="True"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<TextBlock
					Grid.Column="4"
					Margin="{TemplateBinding Padding}"
					Text="{TemplateBinding InputGestureText}" />
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger
				Property="MenuItem.Icon"
				Value="{x:Null}">
				<Setter
					TargetName="Icon"
					Property="Visibility"
					Value="Collapsed" />
			</Trigger>
			<Trigger
				Property="MenuItem.IsChecked"
				Value="True">
				<Setter
					TargetName="GlyphPanel"
					Property="Visibility"
					Value="Visible" />
				<Setter
					TargetName="Icon"
					Property="Visibility"
					Value="Collapsed" />
			</Trigger>
			<Trigger
				Property="MenuItem.IsHighlighted"
				Value="True">
				<Setter
					TargetName="Bg"
					Value="{DynamicResource MenuItemSelectionFill}"
					Property="Fill" />
				<Setter
					TargetName="Bg"
					Value="{DynamicResource MenuItemSelectionStroke}"
					Property="Stroke" />
			</Trigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					Value="{DynamicResource DisabledMenuItemForeground}"
					Property="Foreground" />
				<Setter
					TargetName="GlyphPanel"
					Value="{DynamicResource DisabledMenuItemGlyphPanel}"
					Property="Fill" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
</ResourceDictionary>
