<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls">
	<Style
		BasedOn="{StaticResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
		TargetType="{x:Type ScrollViewer}"
		x:Key="MetroGridViewScrollViewerStyle">
		<Setter
			Property="Focusable"
			Value="False" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ScrollViewer}">
					<Grid
						Background="{TemplateBinding Background}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="*" />
							<ColumnDefinition
								Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition
								Height="*" />
							<RowDefinition
								Height="Auto" />
						</Grid.RowDefinitions>
						<DockPanel
							Margin="{TemplateBinding Padding}">
							<ScrollViewer
								DockPanel.Dock="Top"
								Focusable="False"
								HorizontalScrollBarVisibility="Hidden"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								VerticalScrollBarVisibility="Hidden">
								<GridViewHeaderRowPresenter
									Name="PART_HeaderRowPresenter"
									Margin="2 0 2 0"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
									ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
									ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
									ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
									ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
									ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
									ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
									Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" />
							</ScrollViewer>
							<ScrollContentPresenter
								Name="PART_ScrollContentPresenter"
								CanContentScroll="{TemplateBinding CanContentScroll}"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								KeyboardNavigation.DirectionalNavigation="Local"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</DockPanel>
						<ScrollBar
							Name="PART_HorizontalScrollBar"
							Grid.Row="1"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableWidth}"
							Minimum="0.0"
							Orientation="Horizontal"
							ViewportSize="{TemplateBinding ViewportWidth}"
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						<ScrollBar
							Name="PART_VerticalScrollBar"
							Grid.Column="1"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableHeight}"
							Minimum="0.0"
							Orientation="Vertical"
							ViewportSize="{TemplateBinding ViewportHeight}"
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
							Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger
							Binding="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource Self}}"
							Value="{x:Null}">
							<Setter
								TargetName="PART_HeaderRowPresenter"
								Property="Visibility"
								Value="Collapsed" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		TargetType="{x:Type ListView}"
		x:Key="MetroListView">
		<Setter
			Property="ItemsControl.AlternationCount"
			Value="2" />
		<Setter
			Property="Background"
			Value="{DynamicResource WhiteBrush}" />
		<Setter
			Property="BorderBrush"
			Value="{DynamicResource BlackBrush}" />
		<Setter
			Property="BorderThickness"
			Value="0 1 0 0" />
		<Setter
			Property="FrameworkElement.OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="CanContentScroll"
			Value="False" />
		<Setter
			Property="HorizontalScrollBarVisibility"
			Value="Auto" />
		<Setter
			Property="VerticalScrollBarVisibility"
			Value="Auto" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ListView}">
					<Border
						Name="Border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<ScrollViewer
							Padding="{TemplateBinding Padding}"
							CanContentScroll="{TemplateBinding CanContentScroll}"
							Focusable="False"
							HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							Style="{DynamicResource MetroGridViewScrollViewerStyle}"
							VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}">
							<ItemsPresenter
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger
							Property="ItemsControl.IsGrouping"
							Value="True">
							<Setter
								Property="CanContentScroll"
								Value="False" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								TargetName="Border"
								Value="{DynamicResource GrayBrush9}"
								Property="BorderBrush" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
	</Style>
	<Style
		BasedOn="{StaticResource MetroListView}"
		TargetType="{x:Type ListView}"
		x:Key="VirtualisedMetroListView">
		<Setter
			Property="CanContentScroll"
			Value="True" />
		<Setter
			Property="ScrollViewer.IsDeferredScrollingEnabled"
			Value="True" />
		<Setter
			Property="VirtualizingPanel.IsVirtualizing"
			Value="True" />
		<Setter
			Property="VirtualizingPanel.VirtualizationMode"
			Value="Recycling" />
	</Style>
	<Style
		TargetType="{x:Type ListViewItem}"
		x:Key="MetroListViewItem">
		<Setter
			Property="Background"
			Value="{DynamicResource WhiteBrush}" />
		<Setter
			Property="BorderThickness"
			Value="0" />
		<Setter
			Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush"
			Value="{DynamicResource AccentColorBrush}" />
		<Setter
			Property="Controls:ItemHelper.ActiveSelectionForegroundBrush"
			Value="{DynamicResource AccentSelectedColorBrush}" />
		<Setter
			Property="Controls:ItemHelper.DisabledForegroundBrush"
			Value="{DynamicResource GrayNormalBrush}" />
		<Setter
			Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush"
			Value="{DynamicResource GrayBrush7}" />
		<Setter
			Property="Controls:ItemHelper.DisabledSelectedForegroundBrush"
			Value="{DynamicResource AccentSelectedColorBrush}" />
		<Setter
			Property="Controls:ItemHelper.HoverBackgroundBrush"
			Value="{DynamicResource AccentColorBrush3}" />
		<Setter
			Property="Controls:ItemHelper.HoverSelectedBackgroundBrush"
			Value="{DynamicResource AccentColorBrush}" />
		<Setter
			Property="Controls:ItemHelper.SelectedBackgroundBrush"
			Value="{DynamicResource AccentColorBrush2}" />
		<Setter
			Property="Controls:ItemHelper.SelectedForegroundBrush"
			Value="{DynamicResource AccentSelectedColorBrush}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource TextBrush}" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Stretch" />
		<Setter
			Property="Margin"
			Value="0" />
		<Setter
			Property="MinHeight"
			Value="25" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ListViewItem}">
					<Border
						Name="Border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Grid>
							<GridViewRowPresenter
								Name="PART_RowPresenter"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							<ContentPresenter
								Name="PART_ContentPresenter"
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								Visibility="Collapsed" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger
							Property="GridView.ColumnCollection"
							Value="{x:Null}">
							<Setter
								TargetName="PART_ContentPresenter"
								Property="Visibility"
								Value="Visible" />
							<Setter
								TargetName="PART_RowPresenter"
								Property="Visibility"
								Value="Collapsed" />
						</Trigger>
						<Trigger
							Property="ListBoxItem.IsSelected"
							Value="True">
							<Setter
								Property="Foreground"
								Value="{Binding Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{Binding Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter
								TargetName="Border"
								Value="{DynamicResource HighlightBrush}"
								Property="BorderBrush" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="ListBoxItem.IsSelected"
									Value="True" />
								<Condition
									Property="Selector.IsSelectionActive"
									Value="True" />
							</MultiTrigger.Conditions>
							<Setter
								Property="Foreground"
								Value="{Binding Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{Binding Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter
								TargetName="Border"
								Value="{DynamicResource HighlightBrush}"
								Property="BorderBrush" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="UIElement.IsMouseOver"
									Value="True" />
								<Condition
									Property="ListBoxItem.IsSelected"
									Value="True" />
							</MultiTrigger.Conditions>
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{Binding Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="UIElement.IsMouseOver"
									Value="True" />
								<Condition
									Property="ListBoxItem.IsSelected"
									Value="False" />
							</MultiTrigger.Conditions>
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{Binding Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						</MultiTrigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								Property="Foreground"
								Value="{Binding Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{Binding Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="IsEnabled"
									Value="False" />
								<Condition
									Property="ListBoxItem.IsSelected"
									Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter
									Property="Foreground"
									Value="{Binding Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
								<Setter
									TargetName="Border"
									Property="Background"
									Value="{Binding Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
								<Setter
									TargetName="Border"
									Value="{DynamicResource GrayBrush7}"
									Property="BorderBrush" />
							</MultiTrigger.Setters>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
	</Style>
	<Style
		TargetType="{x:Type ListViewItem}"
		x:Key="NonSelectableListViewContainerStyle">
		<Setter
			Property="BorderBrush"
			Value="{DynamicResource GrayBrush1}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource BlackBrush}" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Stretch" />
		<Setter
			Property="IsTabStop"
			Value="False" />
		<Setter
			Property="Margin"
			Value="0" />
		<Setter
			Property="MinHeight"
			Value="25" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ListViewItem}">
					<Border
						Name="Border"
						Background="{TemplateBinding Background}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<GridViewRowPresenter
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="Border"
								Property="Background"
								Value="#e0eff8" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
		<Style.Triggers>
			<Trigger
				Property="ItemsControl.AlternationIndex"
				Value="0">
				<Setter
					Property="Background"
					Value="{DynamicResource AlternateRow1BackgroundBrush}" />
			</Trigger>
			<Trigger
				Property="ItemsControl.AlternationIndex"
				Value="1">
				<Setter
					Property="Background"
					Value="{DynamicResource AlternateRow2BackgroundBrush}" />
				<Setter
					Property="BorderThickness"
					Value="0 1 0 1" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style
		TargetType="{x:Type Thumb}"
		x:Key="GridViewColumnHeaderGripper">
		<Setter
			Property="Background"
			Value="#FFD3D3D3" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Thumb}">
					<Border
						Margin="0 0 0 2"
						Padding="{TemplateBinding Padding}"
						Background="#00FFFFFF">
						<Rectangle
							Width="1"
							HorizontalAlignment="Center"
							Fill="{TemplateBinding Background}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="Width"
			Value="18" />
	</Style>
	<Style
		TargetType="{x:Type GridViewColumnHeader}"
		x:Key="MetroGridViewColumnHeader">
		<Setter
			Property="Controls:ControlsHelper.ContentCharacterCasing"
			Value="Upper" />
		<Setter
			Property="FontWeight"
			Value="SemiBold" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource TextBrush}" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Left" />
		<Setter
			Property="Padding"
			Value="4 2 4 2" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type GridViewColumnHeader}">
					<Grid>
						<Rectangle
							Fill="#00FFFFFF"
							IsHitTestVisible="True" />
						<Border
							Name="HeaderBorder">
							<Controls:ContentControlEx
								Name="HeaderContent"
								Margin="0 0 0 1"
								Padding="{TemplateBinding Padding}"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{TemplateBinding Content}"
								ContentStringFormat="{TemplateBinding ContentStringFormat}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								ContentCharacterCasing="{Binding Path=(Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" />
						</Border>
						<Thumb
							Name="PART_HeaderGripper"
							Margin="0 0 -9 0"
							HorizontalAlignment="Right"
							Style="{StaticResource GridViewColumnHeaderGripper}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="IsPressed"
							Value="True">
							<Setter
								TargetName="HeaderBorder"
								Value="{DynamicResource GrayBrush8}"
								Property="Background" />
							<Setter
								TargetName="HeaderContent"
								Property="Margin"
								Value="1 1 0 0" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								Value="{DynamicResource SystemColors.GrayTextBrushKey}"
								Property="Foreground" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
		<Style.Triggers>
			<Trigger
				Property="GridViewColumnHeader.Role"
				Value="Floating">
				<Setter
					Property="UIElement.Opacity"
					Value="0.7" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type GridViewColumnHeader}">
							<Canvas
								Name="PART_FloatingHeaderCanvas">
								<Rectangle
									Width="{TemplateBinding ActualWidth}"
									Height="{TemplateBinding ActualHeight}"
									Fill="{DynamicResource AccentColorBrush3}" />
							</Canvas>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>
