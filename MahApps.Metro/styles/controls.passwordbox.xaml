<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Behaviors="clr-namespace:MahApps.Metro.Behaviours" xmlns:Controls="clr-namespace:MahApps.Metro.Controls" xmlns:Converters="clr-namespace:MahApps.Metro.Converters">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary
			Source="pack://application:,,,/MahApps.Metro;component/Styles/Shared.xaml" />
		<ResourceDictionary
			Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Buttons.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<BooleanToVisibilityConverter
		x:Key="BooleanToVisibilityConverter" />
	<Converters:StringToVisibilityConverter
		x:Key="StringToVisibilityConverter" />
	<Converters:StringToVisibilityConverter
		OppositeStringValue="True"
		x:Key="StringToOppositeVisibilityConverter" />
	<Grid
		Width="16"
		Height="16"
		Background="{DynamicResource BlackBrush}"
		Opacity="0.8"
		x:Key="RevealButtonIcon">
		<UIElement.OpacityMask>
			<VisualBrush>
				<VisualBrush.Visual>
					<Canvas
						Width="42"
						Height="25.8461">
						<Path
							Canvas.Left="17"
							Canvas.Top="25.0769"
							Data="F1 M38,33.1538 C40.6765,33.1538 42.8462,35.3235 42.8462,38 C42.8462,40.6765 40.6765,42.8461 38,42.8461 C35.3235,42.8461 33.1539,40.6765 33.1539,38 C33.1539,35.3235 35.3236,33.1538 38,33.1538 M38,25.0769 C49.3077,25.0769 59,33.1538 59,38 C59,42.8461 49.3077,50.9231 38,50.9231 C26.6923,50.9231 17,42.8461 17,38 C17,33.1538 26.6923,25.0769 38,25.0769 M38,29.1154 C33.0932,29.1154 29.1154,33.0932 29.1154,38 C29.1154,42.9068 33.0932,46.8846 38,46.8846 C42.9068,46.8846 46.8846,42.9068 46.8846,38 C46.8846,33.0932 42.9068,29.1154 38,29.1154"
							Fill="#FF000000"
							Stretch="Fill" />
					</Canvas>
				</VisualBrush.Visual>
			</VisualBrush>
		</UIElement.OpacityMask>
	</Grid>
	<Style
		BasedOn="{StaticResource ChromelessButtonStyle}"
		TargetType="{x:Type ButtonBase}"
		x:Key="RevealButtonStyle">
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ButtonBase}">
					<Grid
						Background="{TemplateBinding Background}">
						<ContentPresenter
							Name="PART_ContentPresenter"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="PART_ContentPresenter"
								Property="UIElement.Opacity"
								Value="1" />
						</Trigger>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="False">
							<Setter
								TargetName="PART_ContentPresenter"
								Property="UIElement.Opacity"
								Value=".5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ContentControl
		Width="Auto"
		Height="Auto"
		Padding="2"
		HorizontalAlignment="Center"
		VerticalAlignment="Center"
		Content="M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z"
		Style="{DynamicResource PathIconContentControlStyle}"
		x:Key="DefaultRevealButtonIcon" />
	<Grid
		Width="16"
		Height="16"
		Background="{DynamicResource BlackBrush}"
		Opacity="0.8"
		x:Key="DefaultCapsLockIcon">
		<UIElement.OpacityMask>
			<VisualBrush>
				<VisualBrush.Visual>
					<Canvas
						Width="24"
						Height="24">
						<Path
							Data="M13,14 L11,14 L11,10 L13,10 M13,18 L11,18 L11,16 L13,16 M1,21 L23,21 L12,2 L1,21"
							Fill="#FF000000" />
					</Canvas>
				</VisualBrush.Visual>
			</VisualBrush>
		</UIElement.OpacityMask>
	</Grid>
	<Style
		TargetType="{x:Type PasswordBox}"
		x:Key="MetroPasswordBox">
		<Setter
			Property="Background"
			Value="{DynamicResource ControlBackgroundBrush}" />
		<Setter
			Property="Behaviors:StylizedBehaviors.Behaviors">
			<Setter.Value>
				<Behaviors:StylizedBehaviorCollection>
					<Behaviors:PasswordBoxBindingBehavior />
				</Behaviors:StylizedBehaviorCollection>
			</Setter.Value>
		</Setter>
		<Setter
			Property="BorderBrush"
			Value="{DynamicResource TextBoxBorderBrush}" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="PasswordBox.CaretBrush"
			Value="{DynamicResource BlackBrush}" />
		<Setter
			Property="FrameworkElement.ContextMenu"
			Value="{DynamicResource TextBoxMetroContextMenu}" />
		<Setter
			Property="Controls:ControlsHelper.FocusBorderBrush"
			Value="{DynamicResource TextBoxFocusBorderBrush}" />
		<Setter
			Property="Controls:ControlsHelper.MouseOverBorderBrush"
			Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
		<Setter
			Property="Controls:PasswordBoxHelper.CapsLockIcon"
			Value="{StaticResource DefaultCapsLockIcon}" />
		<Setter
			Property="Controls:TextBoxHelper.ButtonFontSize"
			Value="{DynamicResource ClearTextButtonFontSize}" />
		<Setter
			Property="Controls:TextBoxHelper.ButtonWidth"
			Value="22" />
		<Setter
			Property="Controls:TextBoxHelper.IsMonitoring"
			Value="True" />
		<Setter
			Property="FontFamily"
			Value="{DynamicResource ContentFontFamily}" />
		<Setter
			Property="FontSize"
			Value="{DynamicResource ContentFontSize}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource TextBrush}" />
		<Setter
			Property="MinHeight"
			Value="26" />
		<Setter
			Property="Padding"
			Value="0" />
		<Setter
			Property="PasswordBox.SelectionBrush"
			Value="{DynamicResource HighlightBrush}" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type PasswordBox}">
					<FrameworkTemplate.Resources>
						<ResourceDictionary>
							<Storyboard
								x:Key="enterGotFocus">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									To=".2"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="exitGotFocus">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="enterHasText">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									From=".2"
									To="0"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="exitHasText">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
							</Storyboard>
						</ResourceDictionary>
					</FrameworkTemplate.Resources>
					<Grid>
						<AdornerDecorator
							Name="PART_WaitingForDataEffectAdornerDecorator"
							Visibility="Collapsed">
							<Border
								Name="PART_WaitingForDataEffectGrid"
								Background="{TemplateBinding Background}"
								BorderBrush="#00FFFFFF"
								BorderThickness="{TemplateBinding BorderThickness}"
								Effect="{DynamicResource WaitingForDataEffect}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</AdornerDecorator>
						<Border
							Name="Base"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<Grid
							Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Name="TextColumn"
									Width="*" />
								<ColumnDefinition
									Name="CapsLockColumn"
									Width="Auto" />
								<ColumnDefinition
									Name="ButtonColumn"
									Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition
									Height="Auto" />
								<RowDefinition
									Name="ButtonRow"
									Height="*" />
							</Grid.RowDefinitions>
							<ScrollViewer
								Name="PART_ContentHost"
								Grid.Row="1"
								Grid.Column="0"
								Margin="2"
								VerticalAlignment="Stretch"
								BorderThickness="0"
								IsTabStop="False"
								Background="{x:Null}" />
							<TextBlock
								Name="PART_Message"
								Grid.Row="1"
								Grid.Column="0"
								Margin="6 2 6 2"
								Padding="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Foreground="{TemplateBinding Foreground}"
								Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}"
								Text="{TemplateBinding Controls:Watermark}"
								TextAlignment="{TemplateBinding Controls:WatermarkAlignment}"
								TextTrimming="{TemplateBinding Controls:WatermarkTrimming}"
								Visibility="Collapsed" />
							<ContentControl
								Name="PART_FloatingMessageContainer"
								Grid.Row="0"
								Grid.Column="0"
								Style="{DynamicResource FloatingMessageContainerStyle}">
								<FrameworkElement.Height>
									<MultiBinding
										Converter="{Converters:MathMultiplyConverter}">
										<Binding
											ElementName="PART_FloatingMessage"
											Mode="OneWay"
											Path="ActualHeight" />
										<Binding
											ElementName="PART_FloatingMessageContainer"
											Mode="OneWay"
											Path="Opacity" />
									</MultiBinding>
								</FrameworkElement.Height>
								<TextBlock
									Name="PART_FloatingMessage"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Foreground="{TemplateBinding Foreground}"
									Style="{DynamicResource MetroAutoCollapsingTextBlock}"
									Text="{TemplateBinding Controls:Watermark}"
									TextAlignment="{TemplateBinding Controls:WatermarkAlignment}"
									TextTrimming="{TemplateBinding Controls:WatermarkTrimming}">
									<UIElement.RenderTransform>
										<TranslateTransform
											x:Name="FloatingMessageTransform">
											<TranslateTransform.Y>
												<MultiBinding
													Converter="{Converters:MathSubtractConverter}">
													<Binding
														ElementName="PART_FloatingMessage"
														Mode="OneWay"
														Path="ActualHeight" />
													<Binding
														ElementName="PART_FloatingMessageContainer"
														Mode="OneWay"
														Path="ActualHeight" />
												</MultiBinding>
											</TranslateTransform.Y>
										</TranslateTransform>
									</UIElement.RenderTransform>
								</TextBlock>
							</ContentControl>
							<ContentPresenter
								Name="PART_CapsLockIndicator"
								Grid.Row="0"
								Grid.RowSpan="2"
								Grid.Column="1"
								Margin="1"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								TextBlock.Foreground="{DynamicResource ControlsValidationBrush}"
								Visibility="Collapsed"
								Content="{Binding Path=(Controls:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
								ToolTip="{Binding Path=(Controls:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
							<Button
								Name="PART_ClearText"
								Grid.Row="0"
								Grid.RowSpan="2"
								Grid.Column="2"
								Width="{TemplateBinding Controls:ButtonWidth}"
								Content="{TemplateBinding Controls:ButtonContent}"
								ContentTemplate="{TemplateBinding Controls:ButtonContentTemplate}"
								Focusable="False"
								FontFamily="{TemplateBinding Controls:ButtonFontFamily}"
								FontSize="{TemplateBinding Controls:ButtonFontSize}"
								Foreground="{TemplateBinding Foreground}"
								IsTabStop="False"
								Style="{DynamicResource ChromelessButtonStyle}"
								Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="{Binding Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</Grid>
						<Border
							Name="DisabledVisualElement"
							Background="{DynamicResource ControlsDisabledBrush}"
							BorderBrush="{DynamicResource ControlsDisabledBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsHitTestVisible="False"
							Opacity="0"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							Visibility="{Binding Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger
							Value="Left"
							Binding="{Binding Path=(Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}">
							<Setter
								TargetName="ButtonColumn"
								Property="Width"
								Value="*" />
							<Setter
								TargetName="PART_ClearText"
								Property="Column"
								Value="0" />
							<Setter
								TargetName="PART_ContentHost"
								Property="Column"
								Value="2" />
							<Setter
								TargetName="PART_FloatingMessageContainer"
								Property="Column"
								Value="2" />
							<Setter
								TargetName="PART_Message"
								Property="Column"
								Value="2" />
							<Setter
								TargetName="TextColumn"
								Property="Width"
								Value="Auto" />
						</DataTrigger>
						<DataTrigger
							Value=""
							Binding="{Binding Path=Password, Mode=OneWay, RelativeSource={RelativeSource Self}}">
							<Setter
								TargetName="PART_Message"
								Property="Visibility"
								Value="Visible" />
						</DataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition
									Value="True"
									Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="True"
									Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="True"
									Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" />
							</MultiDataTrigger.Conditions>
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
							</TriggerBase.ExitActions>
						</MultiDataTrigger>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="Base"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								TargetName="DisabledVisualElement"
								Property="UIElement.Opacity"
								Value="0.6" />
						</Trigger>
						<Trigger
							Property="UIElement.IsFocused"
							Value="True">
							<Setter
								TargetName="Base"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter
								TargetName="PART_FloatingMessage"
								Value="{DynamicResource AccentColorBrush}"
								Property="Foreground" />
							<Setter
								TargetName="PART_FloatingMessage"
								Property="UIElement.Opacity"
								Value="1" />
						</Trigger>
						<Trigger
							SourceName="PART_ClearText"
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource GrayBrush8}"
								Property="Background" />
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource AccentColorBrush}"
								Property="Foreground" />
						</Trigger>
						<Trigger
							SourceName="PART_ClearText"
							Property="IsPressed"
							Value="True">
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource BlackBrush}"
								Property="Background" />
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource WhiteBrush}"
								Property="Foreground" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="Controls:TextBoxHelper.HasText"
									Value="False" />
								<Condition
									Property="UIElement.IsFocused"
									Value="True" />
							</MultiTrigger.Conditions>
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource enterGotFocus}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource exitGotFocus}" />
							</TriggerBase.ExitActions>
						</MultiTrigger>
						<Trigger
							Property="Controls:TextBoxHelper.HasText"
							Value="True">
							<Setter
								TargetName="PART_Message"
								Property="Visibility"
								Value="Visible" />
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource enterHasText}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource exitHasText}" />
							</TriggerBase.ExitActions>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="UIElement.IsVisible"
									Value="True" />
								<Condition
									Property="Controls:TextBoxHelper.IsWaitingForData"
									Value="True" />
							</MultiTrigger.Conditions>
							<Setter
								TargetName="PART_WaitingForDataEffectAdornerDecorator"
								Property="Visibility"
								Value="Visible" />
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource WaitingForDataStoryboard}" />
							</TriggerBase.EnterActions>
						</MultiTrigger>
						<Trigger
							Property="Controls:TextBoxHelper.IsWaitingForData"
							Value="False">
							<Setter
								TargetName="PART_WaitingForDataEffectAdornerDecorator"
								Property="Visibility"
								Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="Validation.ErrorTemplate"
			Value="{DynamicResource ValidationErrorTemplate}" />
	</Style>
	<Style
		BasedOn="{StaticResource MetroPasswordBox}"
		TargetType="{x:Type PasswordBox}"
		x:Key="MetroButtonPasswordBox">
		<Setter
			Property="Controls:TextBoxHelper.ButtonTemplate"
			Value="{DynamicResource ChromelessButtonTemplate}" />
		<Setter
			Property="Controls:TextBoxHelper.TextButton"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type PasswordBox}">
					<FrameworkTemplate.Resources>
						<ResourceDictionary>
							<Storyboard
								x:Key="enterGotFocus">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									To=".2"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="exitGotFocus">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="enterHasText">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									From=".2"
									To="0"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="exitHasText">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
							</Storyboard>
						</ResourceDictionary>
					</FrameworkTemplate.Resources>
					<Grid>
						<AdornerDecorator
							Name="PART_WaitingForDataEffectAdornerDecorator"
							Visibility="Collapsed">
							<Border
								Name="PART_WaitingForDataEffectGrid"
								Background="{TemplateBinding Background}"
								BorderBrush="#00FFFFFF"
								BorderThickness="{TemplateBinding BorderThickness}"
								Effect="{DynamicResource WaitingForDataEffect}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</AdornerDecorator>
						<Border
							Name="Base"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<Grid
							Name="PART_InnerGrid"
							Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Name="TextColumn"
									Width="*" />
								<ColumnDefinition
									Name="CapsLockColumn"
									Width="Auto" />
								<ColumnDefinition
									Name="ButtonColumn"
									Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition
									Height="Auto" />
								<RowDefinition
									Name="ButtonRow"
									Height="*" />
							</Grid.RowDefinitions>
							<ScrollViewer
								Name="PART_ContentHost"
								Grid.Row="1"
								Grid.Column="0"
								Margin="2"
								VerticalAlignment="Stretch"
								BorderThickness="0"
								IsTabStop="False"
								Background="{x:Null}" />
							<TextBlock
								Name="PART_Message"
								Grid.Row="1"
								Grid.Column="0"
								Margin="6 2 6 2"
								Padding="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Foreground="{TemplateBinding Foreground}"
								Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}"
								Text="{TemplateBinding Controls:Watermark}"
								TextAlignment="{TemplateBinding Controls:WatermarkAlignment}"
								TextTrimming="{TemplateBinding Controls:WatermarkTrimming}"
								Visibility="Collapsed" />
							<ContentControl
								Name="PART_FloatingMessageContainer"
								Grid.Row="0"
								Grid.Column="0"
								Style="{DynamicResource FloatingMessageContainerStyle}">
								<FrameworkElement.Height>
									<MultiBinding
										Converter="{Converters:MathMultiplyConverter}">
										<Binding
											ElementName="PART_FloatingMessage"
											Mode="OneWay"
											Path="ActualHeight" />
										<Binding
											ElementName="PART_FloatingMessageContainer"
											Mode="OneWay"
											Path="Opacity" />
									</MultiBinding>
								</FrameworkElement.Height>
								<TextBlock
									Name="PART_FloatingMessage"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Foreground="{TemplateBinding Foreground}"
									Style="{DynamicResource MetroAutoCollapsingTextBlock}"
									Text="{TemplateBinding Controls:Watermark}"
									TextAlignment="{TemplateBinding Controls:WatermarkAlignment}"
									TextTrimming="{TemplateBinding Controls:WatermarkTrimming}">
									<UIElement.RenderTransform>
										<TranslateTransform
											x:Name="FloatingMessageTransform">
											<TranslateTransform.Y>
												<MultiBinding
													Converter="{Converters:MathSubtractConverter}">
													<Binding
														ElementName="PART_FloatingMessage"
														Mode="OneWay"
														Path="ActualHeight" />
													<Binding
														ElementName="PART_FloatingMessageContainer"
														Mode="OneWay"
														Path="ActualHeight" />
												</MultiBinding>
											</TranslateTransform.Y>
										</TranslateTransform>
									</UIElement.RenderTransform>
								</TextBlock>
							</ContentControl>
							<ContentPresenter
								Name="PART_CapsLockIndicator"
								Grid.Row="0"
								Grid.RowSpan="2"
								Grid.Column="1"
								Margin="1"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								TextBlock.Foreground="{DynamicResource ControlsValidationBrush}"
								Visibility="Collapsed"
								Content="{Binding Path=(Controls:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
								ToolTip="{Binding Path=(Controls:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
							<Button
								Name="PART_ClearText"
								Grid.Row="0"
								Grid.RowSpan="2"
								Grid.Column="2"
								Width="{TemplateBinding Controls:ButtonWidth}"
								Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="True"
								Content="{TemplateBinding Controls:ButtonContent}"
								ContentTemplate="{TemplateBinding Controls:ButtonContentTemplate}"
								Focusable="False"
								FontFamily="{TemplateBinding Controls:ButtonFontFamily}"
								FontSize="{TemplateBinding Controls:ButtonFontSize}"
								Foreground="{TemplateBinding Foreground}"
								IsTabStop="False"
								Style="{DynamicResource ChromelessButtonStyle}"
								Template="{TemplateBinding Controls:ButtonTemplate}"
								Visibility="{Binding Path=(Controls:TextBoxHelper.TextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</Grid>
						<Border
							Name="DisabledVisualElement"
							Background="{DynamicResource ControlsDisabledBrush}"
							BorderBrush="{DynamicResource ControlsDisabledBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsHitTestVisible="False"
							Opacity="0"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							Visibility="{Binding Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger
							Value="Left"
							Binding="{Binding Path=(Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}">
							<Setter
								TargetName="ButtonColumn"
								Property="Width"
								Value="*" />
							<Setter
								TargetName="PART_ClearText"
								Property="Column"
								Value="0" />
							<Setter
								TargetName="PART_ContentHost"
								Property="Column"
								Value="2" />
							<Setter
								TargetName="PART_FloatingMessageContainer"
								Property="Column"
								Value="2" />
							<Setter
								TargetName="PART_Message"
								Property="Column"
								Value="2" />
							<Setter
								TargetName="TextColumn"
								Property="Width"
								Value="Auto" />
						</DataTrigger>
						<DataTrigger
							Value=""
							Binding="{Binding Path=Password, Mode=OneWay, RelativeSource={RelativeSource Self}}">
							<Setter
								TargetName="PART_Message"
								Property="Visibility"
								Value="Visible" />
						</DataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition
									Value="True"
									Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="True"
									Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="True"
									Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" />
							</MultiDataTrigger.Conditions>
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
							</TriggerBase.ExitActions>
						</MultiDataTrigger>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="Base"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								TargetName="DisabledVisualElement"
								Property="UIElement.Opacity"
								Value="0.6" />
						</Trigger>
						<Trigger
							Property="UIElement.IsFocused"
							Value="True">
							<Setter
								TargetName="Base"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter
								TargetName="PART_FloatingMessage"
								Value="{DynamicResource AccentColorBrush}"
								Property="Foreground" />
							<Setter
								TargetName="PART_FloatingMessage"
								Property="UIElement.Opacity"
								Value="1" />
						</Trigger>
						<Trigger
							SourceName="PART_ClearText"
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource GrayBrush8}"
								Property="Background" />
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource AccentColorBrush}"
								Property="Foreground" />
						</Trigger>
						<Trigger
							SourceName="PART_ClearText"
							Property="IsPressed"
							Value="True">
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource BlackBrush}"
								Property="Background" />
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource WhiteBrush}"
								Property="Foreground" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="Controls:TextBoxHelper.HasText"
									Value="False" />
								<Condition
									Property="UIElement.IsFocused"
									Value="True" />
							</MultiTrigger.Conditions>
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource enterGotFocus}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource exitGotFocus}" />
							</TriggerBase.ExitActions>
						</MultiTrigger>
						<Trigger
							Property="Controls:TextBoxHelper.HasText"
							Value="True">
							<Setter
								TargetName="PART_Message"
								Property="Visibility"
								Value="Visible" />
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource enterHasText}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource exitHasText}" />
							</TriggerBase.ExitActions>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="UIElement.IsVisible"
									Value="True" />
								<Condition
									Property="Controls:TextBoxHelper.IsWaitingForData"
									Value="True" />
							</MultiTrigger.Conditions>
							<Setter
								TargetName="PART_WaitingForDataEffectAdornerDecorator"
								Property="Visibility"
								Value="Visible" />
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource WaitingForDataStoryboard}" />
							</TriggerBase.EnterActions>
						</MultiTrigger>
						<Trigger
							Property="Controls:TextBoxHelper.IsWaitingForData"
							Value="False">
							<Setter
								TargetName="PART_WaitingForDataEffectAdornerDecorator"
								Property="Visibility"
								Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		TargetType="{x:Type TextBox}"
		x:Key="RevealedTextBoxStyle">
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type TextBox}">
					<Grid
						Background="{TemplateBinding Background}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<ScrollViewer
							Name="PART_ContentHost"
							Margin="{TemplateBinding Padding}"
							BorderThickness="0"
							IsTabStop="False"
							Background="{x:Null}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		BasedOn="{StaticResource MetroPasswordBox}"
		TargetType="{x:Type PasswordBox}"
		x:Key="MetroButtonRevealedPasswordBox">
		<Setter
			Property="Controls:PasswordBoxHelper.RevealButtonContent"
			Value="{DynamicResource DefaultRevealButtonIcon}" />
		<Setter
			Property="Controls:TextBoxHelper.ButtonTemplate"
			Value="{DynamicResource ChromelessButtonTemplate}" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type PasswordBox}">
					<FrameworkTemplate.Resources>
						<ResourceDictionary>
							<Storyboard
								x:Key="enterGotFocus">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									To=".2"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="exitGotFocus">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="enterHasText">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									From=".2"
									To="0"
									Duration="0:0:0.2" />
							</Storyboard>
							<Storyboard
								x:Key="exitHasText">
								<DoubleAnimation
									Storyboard.TargetName="PART_Message"
									Storyboard.TargetProperty="Opacity"
									Duration="0:0:0.2" />
							</Storyboard>
						</ResourceDictionary>
					</FrameworkTemplate.Resources>
					<Grid>
						<AdornerDecorator
							Name="PART_WaitingForDataEffectAdornerDecorator"
							Visibility="Collapsed">
							<Border
								Name="PART_WaitingForDataEffectGrid"
								Background="{TemplateBinding Background}"
								BorderBrush="#00FFFFFF"
								BorderThickness="{TemplateBinding BorderThickness}"
								Effect="{DynamicResource WaitingForDataEffect}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</AdornerDecorator>
						<Border
							Name="Base"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<Grid
							Name="PART_InnerGrid"
							Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Name="TextColumn"
									Width="*" />
								<ColumnDefinition
									Name="CapsLockColumn"
									Width="Auto" />
								<ColumnDefinition
									Name="RevealButtonColumn"
									Width="Auto" />
								<ColumnDefinition
									Name="ButtonColumn"
									Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition
									Height="Auto" />
								<RowDefinition
									Name="ButtonRow"
									Height="*" />
							</Grid.RowDefinitions>
							<ScrollViewer
								Name="PART_ContentHost"
								Grid.Row="1"
								Grid.Column="0"
								Margin="2"
								VerticalAlignment="Stretch"
								BorderThickness="0"
								IsTabStop="False"
								Background="{x:Null}" />
							<TextBox
								Name="RevealedPassword"
								Grid.Row="1"
								Grid.Column="0"
								Margin="2"
								Padding="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Background="{TemplateBinding Background}"
								BorderThickness="0"
								CaretBrush="{TemplateBinding CaretBrush}"
								FontFamily="{TemplateBinding FontFamily}"
								FontSize="{TemplateBinding FontSize}"
								Foreground="{TemplateBinding Foreground}"
								SelectionBrush="{TemplateBinding SelectionBrush}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								Style="{DynamicResource RevealedTextBoxStyle}"
								Text="{TemplateBinding Behaviors:Password}"
								Visibility="Hidden"
								FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" />
							<TextBlock
								Name="PART_Message"
								Grid.Row="1"
								Grid.Column="0"
								Margin="6 2 6 2"
								Padding="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Foreground="{TemplateBinding Foreground}"
								Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}"
								Text="{TemplateBinding Controls:Watermark}"
								TextAlignment="{TemplateBinding Controls:WatermarkAlignment}"
								TextTrimming="{TemplateBinding Controls:WatermarkTrimming}"
								Visibility="Collapsed" />
							<ContentControl
								Name="PART_FloatingMessageContainer"
								Grid.Row="0"
								Grid.Column="0"
								Style="{DynamicResource FloatingMessageContainerStyle}">
								<FrameworkElement.Height>
									<MultiBinding
										Converter="{Converters:MathMultiplyConverter}">
										<Binding
											ElementName="PART_FloatingMessage"
											Mode="OneWay"
											Path="ActualHeight" />
										<Binding
											ElementName="PART_FloatingMessageContainer"
											Mode="OneWay"
											Path="Opacity" />
									</MultiBinding>
								</FrameworkElement.Height>
								<TextBlock
									Name="PART_FloatingMessage"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Foreground="{TemplateBinding Foreground}"
									Style="{DynamicResource MetroAutoCollapsingTextBlock}"
									Text="{TemplateBinding Controls:Watermark}"
									TextAlignment="{TemplateBinding Controls:WatermarkAlignment}"
									TextTrimming="{TemplateBinding Controls:WatermarkTrimming}">
									<UIElement.RenderTransform>
										<TranslateTransform
											x:Name="FloatingMessageTransform">
											<TranslateTransform.Y>
												<MultiBinding
													Converter="{Converters:MathSubtractConverter}">
													<Binding
														ElementName="PART_FloatingMessage"
														Mode="OneWay"
														Path="ActualHeight" />
													<Binding
														ElementName="PART_FloatingMessageContainer"
														Mode="OneWay"
														Path="ActualHeight" />
												</MultiBinding>
											</TranslateTransform.Y>
										</TranslateTransform>
									</UIElement.RenderTransform>
								</TextBlock>
							</ContentControl>
							<ContentPresenter
								Name="PART_CapsLockIndicator"
								Grid.Row="0"
								Grid.RowSpan="2"
								Grid.Column="1"
								Margin="1"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								TextBlock.Foreground="{DynamicResource ControlsValidationBrush}"
								Visibility="Collapsed"
								Content="{Binding Path=(Controls:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
								ToolTip="{Binding Path=(Controls:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
							<Button
								Name="PART_RevealButton"
								Grid.Row="0"
								Grid.RowSpan="2"
								Grid.Column="2"
								Width="{TemplateBinding Controls:ButtonWidth}"
								Content="{TemplateBinding Controls:RevealButtonContent}"
								ContentTemplate="{TemplateBinding Controls:RevealButtonContentTemplate}"
								Focusable="False"
								Foreground="{TemplateBinding Foreground}"
								IsTabStop="False"
								Style="{DynamicResource RevealButtonStyle}"
								Visibility="{Binding ElementName=RevealedPassword, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" />
							<Button
								Name="PART_ClearText"
								Grid.Row="0"
								Grid.RowSpan="2"
								Grid.Column="3"
								Width="{TemplateBinding Controls:ButtonWidth}"
								Content="{TemplateBinding Controls:ButtonContent}"
								ContentTemplate="{TemplateBinding Controls:ButtonContentTemplate}"
								Focusable="False"
								FontFamily="{TemplateBinding Controls:ButtonFontFamily}"
								FontSize="{TemplateBinding Controls:ButtonFontSize}"
								Foreground="{TemplateBinding Foreground}"
								IsTabStop="False"
								Style="{DynamicResource ChromelessButtonStyle}"
								Template="{TemplateBinding Controls:ButtonTemplate}"
								Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="{Binding Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</Grid>
						<Border
							Name="DisabledVisualElement"
							Background="{DynamicResource ControlsDisabledBrush}"
							BorderBrush="{DynamicResource ControlsDisabledBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsHitTestVisible="False"
							Opacity="0"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							Visibility="{Binding Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger
							Value="Left"
							Binding="{Binding Path=(Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}">
							<Setter
								TargetName="ButtonColumn"
								Property="Width"
								Value="*" />
							<Setter
								TargetName="PART_CapsLockIndicator"
								Property="Column"
								Value="2" />
							<Setter
								TargetName="PART_ClearText"
								Property="Column"
								Value="0" />
							<Setter
								TargetName="PART_ContentHost"
								Property="Column"
								Value="3" />
							<Setter
								TargetName="PART_FloatingMessageContainer"
								Property="Column"
								Value="3" />
							<Setter
								TargetName="PART_Message"
								Property="Column"
								Value="3" />
							<Setter
								TargetName="PART_RevealButton"
								Property="Column"
								Value="1" />
							<Setter
								TargetName="RevealedPassword"
								Property="Column"
								Value="3" />
							<Setter
								TargetName="TextColumn"
								Property="Width"
								Value="Auto" />
						</DataTrigger>
						<DataTrigger
							Value=""
							Binding="{Binding Path=Password, Mode=OneWay, RelativeSource={RelativeSource Self}}">
							<Setter
								TargetName="PART_Message"
								Property="Visibility"
								Value="Visible" />
						</DataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition
									Value="True"
									Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="True"
									Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" />
								<Condition
									Value="True"
									Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" />
							</MultiDataTrigger.Conditions>
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
							</TriggerBase.ExitActions>
						</MultiDataTrigger>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="Base"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								TargetName="DisabledVisualElement"
								Property="UIElement.Opacity"
								Value="0.6" />
						</Trigger>
						<Trigger
							Property="UIElement.IsFocused"
							Value="True">
							<Setter
								TargetName="Base"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter
								TargetName="PART_FloatingMessage"
								Value="{DynamicResource AccentColorBrush}"
								Property="Foreground" />
							<Setter
								TargetName="PART_FloatingMessage"
								Property="UIElement.Opacity"
								Value="1" />
						</Trigger>
						<Trigger
							SourceName="PART_RevealButton"
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="PART_RevealButton"
								Value="{DynamicResource GrayBrush8}"
								Property="Background" />
							<Setter
								TargetName="PART_RevealButton"
								Value="{DynamicResource AccentColorBrush}"
								Property="Foreground" />
						</Trigger>
						<Trigger
							SourceName="PART_RevealButton"
							Property="IsPressed"
							Value="True">
							<Setter
								TargetName="PART_ContentHost"
								Property="Visibility"
								Value="Hidden" />
							<Setter
								TargetName="PART_RevealButton"
								Value="{DynamicResource BlackBrush}"
								Property="Background" />
							<Setter
								TargetName="PART_RevealButton"
								Value="{DynamicResource WhiteBrush}"
								Property="Foreground" />
							<Setter
								TargetName="RevealedPassword"
								Property="Visibility"
								Value="Visible" />
						</Trigger>
						<Trigger
							SourceName="PART_ClearText"
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource GrayBrush8}"
								Property="Background" />
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource AccentColorBrush}"
								Property="Foreground" />
						</Trigger>
						<Trigger
							SourceName="PART_ClearText"
							Property="IsPressed"
							Value="True">
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource BlackBrush}"
								Property="Background" />
							<Setter
								TargetName="PART_ClearText"
								Value="{DynamicResource WhiteBrush}"
								Property="Foreground" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="Controls:TextBoxHelper.HasText"
									Value="False" />
								<Condition
									Property="UIElement.IsFocused"
									Value="True" />
							</MultiTrigger.Conditions>
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource enterGotFocus}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource exitGotFocus}" />
							</TriggerBase.ExitActions>
						</MultiTrigger>
						<Trigger
							Property="Controls:TextBoxHelper.HasText"
							Value="True">
							<Setter
								TargetName="PART_Message"
								Property="Visibility"
								Value="Visible" />
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource enterHasText}" />
							</TriggerBase.EnterActions>
							<TriggerBase.ExitActions>
								<BeginStoryboard
									Storyboard="{StaticResource exitHasText}" />
							</TriggerBase.ExitActions>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="UIElement.IsVisible"
									Value="True" />
								<Condition
									Property="Controls:TextBoxHelper.IsWaitingForData"
									Value="True" />
							</MultiTrigger.Conditions>
							<Setter
								TargetName="PART_WaitingForDataEffectAdornerDecorator"
								Property="Visibility"
								Value="Visible" />
							<TriggerBase.EnterActions>
								<BeginStoryboard
									Storyboard="{StaticResource WaitingForDataStoryboard}" />
							</TriggerBase.EnterActions>
						</MultiTrigger>
						<Trigger
							Property="Controls:TextBoxHelper.IsWaitingForData"
							Value="False">
							<Setter
								TargetName="PART_WaitingForDataEffectAdornerDecorator"
								Property="Visibility"
								Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		BasedOn="{StaticResource MetroButtonRevealedPasswordBox}"
		TargetType="{x:Type PasswordBox}"
		x:Key="Win8MetroPasswordBox">
		<Setter
			Property="UIElement.AllowDrop"
			Value="True" />
		<Setter
			Property="FrameworkElement.FocusVisualStyle"
			Value="{x:Null}" />
		<Setter
			Property="FontSize"
			Value="15" />
	</Style>
</ResourceDictionary>
