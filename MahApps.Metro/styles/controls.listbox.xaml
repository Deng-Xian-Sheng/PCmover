<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls">
	<Style
		TargetType="{x:Type ListBox}"
		x:Key="MetroListBox">
		<Setter
			Property="Background"
			Value="{DynamicResource WhiteBrush}" />
		<Setter
			Property="BorderBrush"
			Value="{DynamicResource BlackBrush}" />
		<Setter
			Property="BorderThickness"
			Value="0" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Stretch" />
		<Setter
			Property="CanContentScroll"
			Value="True" />
		<Setter
			Property="HorizontalScrollBarVisibility"
			Value="Auto" />
		<Setter
			Property="ScrollViewer.PanningMode"
			Value="Both" />
		<Setter
			Property="VerticalScrollBarVisibility"
			Value="Auto" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Stylus.IsFlicksEnabled"
			Value="False" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ListBox}">
					<Border
						Name="Border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<ScrollViewer
							Padding="{TemplateBinding Padding}"
							CanContentScroll="{TemplateBinding CanContentScroll}"
							Focusable="False"
							HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}">
							<ItemsPresenter
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger
							Property="ItemsControl.IsGrouping"
							Value="False">
							<Setter
								Property="CanContentScroll"
								Value="False" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
		<Style.Triggers>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					Property="BorderBrush"
					Value="{DynamicResource GrayBrush9}" />
			</Trigger>
			<Trigger
				Property="VirtualizingPanel.IsVirtualizing"
				Value="True">
				<Setter
					Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
				<Setter
					Property="CanContentScroll"
					Value="True" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style
		BasedOn="{StaticResource MetroListBox}"
		TargetType="{x:Type ListBox}"
		x:Key="VirtualisedMetroListBox">
		<Setter
			Property="VirtualizingPanel.IsVirtualizing"
			Value="True" />
		<Setter
			Property="VirtualizingPanel.VirtualizationMode"
			Value="Recycling" />
	</Style>
	<Style
		TargetType="{x:Type ListBoxItem}"
		x:Key="MetroListBoxItem">
		<Setter
			Property="Background"
			Value="{DynamicResource WhiteBrush}" />
		<Setter
			Property="BorderThickness"
			Value="0" />
		<Setter
			Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush"
			Value="{DynamicResource AccentColorBrush}" />
		<Setter
			Property="Controls:ItemHelper.ActiveSelectionForegroundBrush"
			Value="{DynamicResource AccentSelectedColorBrush}" />
		<Setter
			Property="Controls:ItemHelper.DisabledForegroundBrush"
			Value="{DynamicResource GrayNormalBrush}" />
		<Setter
			Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush"
			Value="{DynamicResource GrayBrush7}" />
		<Setter
			Property="Controls:ItemHelper.DisabledSelectedForegroundBrush"
			Value="{DynamicResource AccentSelectedColorBrush}" />
		<Setter
			Property="Controls:ItemHelper.HoverBackgroundBrush"
			Value="{DynamicResource AccentColorBrush3}" />
		<Setter
			Property="Controls:ItemHelper.HoverSelectedBackgroundBrush"
			Value="{DynamicResource AccentColorBrush}" />
		<Setter
			Property="Controls:ItemHelper.SelectedBackgroundBrush"
			Value="{DynamicResource AccentColorBrush2}" />
		<Setter
			Property="Controls:ItemHelper.SelectedForegroundBrush"
			Value="{DynamicResource AccentSelectedColorBrush}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource TextBrush}" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="{Binding HorizontalContentAlignment, Mode=OneWay, FallbackValue=Stretch, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter
			Property="Margin"
			Value="0" />
		<Setter
			Property="MinHeight"
			Value="25" />
		<Setter
			Property="Padding"
			Value="5 0 0 0" />
		<Setter
			Property="RenderOptions.ClearTypeHint"
			Value="{Binding Path=(RenderOptions.ClearTypeHint), Mode=OneWay, FallbackValue=Auto, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ListBoxItem}">
					<Grid
						Background="{TemplateBinding Background}"
						RenderOptions.ClearTypeHint="{TemplateBinding ClearTypeHint}">
						<Border
							Name="Border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<Grid
							Margin="{TemplateBinding BorderThickness}">
							<ContentPresenter
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="ListBoxItem.IsSelected"
							Value="True">
							<Setter
								Property="Foreground"
								Value="{Binding Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{Binding Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="ListBoxItem.IsSelected"
									Value="True" />
								<Condition
									Property="Selector.IsSelectionActive"
									Value="True" />
							</MultiTrigger.Conditions>
							<Setter
								Property="Foreground"
								Value="{Binding Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{Binding Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="UIElement.IsMouseOver"
									Value="True" />
								<Condition
									Property="ListBoxItem.IsSelected"
									Value="True" />
							</MultiTrigger.Conditions>
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{Binding Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="UIElement.IsMouseOver"
									Value="True" />
								<Condition
									Property="ListBoxItem.IsSelected"
									Value="False" />
							</MultiTrigger.Conditions>
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{Binding Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						</MultiTrigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								Property="Foreground"
								Value="{Binding Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{Binding Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="IsEnabled"
									Value="False" />
								<Condition
									Property="ListBoxItem.IsSelected"
									Value="True" />
							</MultiTrigger.Conditions>
							<Setter
								Property="Foreground"
								Value="{Binding Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{Binding Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="VerticalContentAlignment"
			Value="{Binding VerticalContentAlignment, Mode=OneWay, FallbackValue=Center, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
	</Style>
</ResourceDictionary>
