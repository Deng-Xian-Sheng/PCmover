<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls">
	<Style
		TargetType="{x:Type StatusBarItem}"
		x:Key="MetroStatusBarItem">
		<Setter
			Property="BorderBrush"
			Value="{DynamicResource IdealForegroundColorBrush}" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Left" />
		<Setter
			Property="Padding"
			Value="3" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type StatusBarItem}">
					<Border
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True">
						<ContentPresenter
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								Value="{DynamicResource GrayBrush2}"
								Property="Foreground" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
	</Style>
	<Style
		TargetType="{x:Type Separator}"
		x:Key="MetroStatusBarSeparator">
		<Setter
			Property="Background"
			Value="{DynamicResource IdealForegroundColorBrush}" />
		<Setter
			Property="MinHeight"
			Value="1" />
		<Setter
			Property="MinWidth"
			Value="1" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Separator}">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		TargetType="{x:Type StatusBar}"
		x:Key="MetroStatusBar">
		<Setter
			Property="FontFamily"
			Value="{DynamicResource SystemFonts.StatusFontFamilyKey}" />
		<Setter
			Property="FontSize"
			Value="{DynamicResource StatusBarFontSize}" />
		<Setter
			Property="FontStyle"
			Value="{DynamicResource SystemFonts.StatusFontStyleKey}" />
		<Setter
			Property="FontWeight"
			Value="{DynamicResource SystemFonts.StatusFontWeightKey}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource IdealForegroundColorBrush}" />
		<Setter
			Property="ItemContainerStyle"
			Value="{DynamicResource MetroStatusBarItem}" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type StatusBar}">
					<Border
						Name="Border"
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True">
						<ItemsPresenter
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition
						Value="True"
						Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" />
					<Condition
						Value="True"
						Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
				</MultiDataTrigger.Conditions>
				<Setter
					Property="Background"
					Value="{Binding Path=WindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}}" />
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition
						Value="True"
						Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" />
					<Condition
						Value="False"
						Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
				</MultiDataTrigger.Conditions>
				<Setter
					Property="Background"
					Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}}" />
			</MultiDataTrigger>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					Property="BorderBrush"
					Value="{DynamicResource GrayBrush9}" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>
