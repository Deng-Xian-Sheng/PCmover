<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls">
	<Style
		TargetType="{x:Type CheckBox}"
		x:Key="MetroCheckBox">
		<Setter
			Property="Background"
			Value="{DynamicResource WhiteBrush}" />
		<Setter
			Property="BorderBrush"
			Value="{DynamicResource CheckBoxBrush}" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="Controls:ControlsHelper.FocusBorderBrush"
			Value="{DynamicResource HighlightBrush}" />
		<Setter
			Property="Controls:ControlsHelper.MouseOverBorderBrush"
			Value="{DynamicResource CheckBoxMouseOverBrush}" />
		<Setter
			Property="FontFamily"
			Value="{DynamicResource ContentFontFamily}" />
		<Setter
			Property="FontSize"
			Value="{DynamicResource ContentFontSize}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource LabelTextBrush}" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Left" />
		<Setter
			Property="Padding"
			Value="6 0 0 0" />
		<Setter
			Property="UIElement.SnapsToDevicePixels"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type CheckBox}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Name="LeftCol"
								Width="18" />
							<ColumnDefinition
								Name="RightCol"
								Width="*" />
						</Grid.ColumnDefinitions>
						<Grid
							Name="PART_CHECKBOX">
							<Rectangle
								Margin="-6 0"
								Fill="{DynamicResource TransparentWhiteBrush}" />
							<Border
								Name="normal"
								Width="18"
								Height="18"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							<Path
								Name="checkBox"
								Width="12"
								Height="10"
								Data="M1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 C1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 C1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 C1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 C1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 C1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 C1147,431.34619140625 1145.607177734375,430 1145.607177734375,430"
								Fill="{DynamicResource HighlightBrush}"
								Opacity="0"
								Stretch="Fill"
								UseLayoutRounding="False" />
							<Rectangle
								Name="IndeterminateCheck"
								Width="8"
								Height="3"
								Fill="{DynamicResource GrayBrush3}"
								Opacity="0" />
							<Border
								Name="disabled"
								Width="18"
								Height="18"
								Background="{DynamicResource SemiTransparentWhiteBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Opacity="0"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Grid>
						<ContentPresenter
							Name="contentPresenter"
							Grid.Column="1"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentStringFormat="{TemplateBinding ContentStringFormat}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
							RecognizesAccessKey="True" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								x:Name="CommonStates">
								<VisualState
									x:Name="Normal" />
								<VisualState
									x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="contentPresenter"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											To=".55"
											Duration="0" />
										<DoubleAnimation
											Storyboard.TargetName="disabled"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											To="1"
											Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup
								x:Name="CheckStates">
								<VisualState
									x:Name="Checked">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="checkBox"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											To="1"
											Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Unchecked" />
								<VisualState
									x:Name="Indeterminate">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="IndeterminateCheck"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											To="1"
											Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="normal"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger
							Property="IsPressed"
							Value="True">
							<Setter
								TargetName="normal"
								Value="{DynamicResource HighlightBrush}"
								Property="BorderBrush" />
						</Trigger>
						<Trigger
							Property="UIElement.IsFocused"
							Value="True">
							<Setter
								TargetName="normal"
								Property="BorderBrush"
								Value="{Binding Path=(Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger
							Property="FlowDirection"
							Value="RightToLeft">
							<Setter
								TargetName="checkBox"
								Property="FrameworkElement.LayoutTransform">
								<Setter.Value>
									<ScaleTransform
										ScaleX="-1" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger
							Property="Controls:ToggleButtonHelper.ContentDirection"
							Value="RightToLeft">
							<Setter
								Property="Padding"
								Value="0 0 6 0" />
							<Setter
								TargetName="LeftCol"
								Property="Width"
								Value="*" />
							<Setter
								TargetName="PART_CHECKBOX"
								Property="Column"
								Value="1" />
							<Setter
								TargetName="RightCol"
								Property="Width"
								Value="18" />
							<Setter
								TargetName="contentPresenter"
								Property="Column"
								Value="0" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
	</Style>
</ResourceDictionary>
